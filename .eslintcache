[{"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\index.js":"1","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\reportWebVitals.js":"2","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\App.js":"3","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js":"4","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js":"5","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js":"6","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Header\\header.js":"7","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\ForgotPassword.js":"8","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Login.js":"9","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingOut.js":"10","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingIn.js":"11","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Register.js":"12","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\NameAndPhoto.js":"13","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingReg.js":"14","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js":"15","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js":"16","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebase.js":"17","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js":"18","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\Posts.js":"19","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Mobile\\FriendsDropLeft.js":"20","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ProfilePage.js":"21","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Desktop\\DesktopFriends.js":"22","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\SearchBar.js":"23","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js":"24","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js":"25","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js":"26","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js":"27","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\AllPostsAssign.js":"28","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\post.js":"29","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Friend.js":"30","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\AllFriendsAssign.js":"31","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\Profile.js":"32","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\foundUser.js":"33","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\userPhoto.js":"34","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\DeleteUser.js":"35","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ChangePassword.js":"36","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\ChatRoom.js":"37","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\AboutMe.js":"38","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\Observer.js":"39","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\LikeDislike.js":"40","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\Comments.js":"41","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Message.js":"42","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\SingleComment.js":"43"},{"size":1065,"mtime":1638738329445,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1638738329451,"results":"46","hashOfConfig":"45"},{"size":4093,"mtime":1639069420562,"results":"47","hashOfConfig":"45"},{"size":2652,"mtime":1638738650262,"results":"48","hashOfConfig":"45"},{"size":17162,"mtime":1639070285290,"results":"49","hashOfConfig":"45"},{"size":1590,"mtime":1639070069985,"results":"50","hashOfConfig":"45"},{"size":4498,"mtime":1638986675592,"results":"51","hashOfConfig":"45"},{"size":1646,"mtime":1638738329439,"results":"52","hashOfConfig":"45"},{"size":2221,"mtime":1638915585639,"results":"53","hashOfConfig":"45"},{"size":463,"mtime":1638738329436,"results":"54","hashOfConfig":"45"},{"size":755,"mtime":1638738329436,"results":"55","hashOfConfig":"45"},{"size":3618,"mtime":1638738329444,"results":"56","hashOfConfig":"45"},{"size":4158,"mtime":1639068972887,"results":"57","hashOfConfig":"45"},{"size":473,"mtime":1638738329438,"results":"58","hashOfConfig":"45"},{"size":758,"mtime":1638738329438,"results":"59","hashOfConfig":"45"},{"size":4141,"mtime":1639052673736,"results":"60","hashOfConfig":"45"},{"size":988,"mtime":1638738329427,"results":"61","hashOfConfig":"45"},{"size":1170,"mtime":1639069449342,"results":"62","hashOfConfig":"45"},{"size":518,"mtime":1639042966306,"results":"63","hashOfConfig":"45"},{"size":1540,"mtime":1638986467023,"results":"64","hashOfConfig":"45"},{"size":1734,"mtime":1639049085732,"results":"65","hashOfConfig":"45"},{"size":605,"mtime":1638738329410,"results":"66","hashOfConfig":"45"},{"size":1960,"mtime":1638868931708,"results":"67","hashOfConfig":"45"},{"size":1335,"mtime":1638738329406,"results":"68","hashOfConfig":"45"},{"size":3215,"mtime":1638872293630,"results":"69","hashOfConfig":"45"},{"size":4948,"mtime":1638738329415,"results":"70","hashOfConfig":"45"},{"size":1583,"mtime":1638871955404,"results":"71","hashOfConfig":"45"},{"size":1676,"mtime":1638738329398,"results":"72","hashOfConfig":"45"},{"size":6762,"mtime":1638964959819,"results":"73","hashOfConfig":"45"},{"size":3438,"mtime":1638738329411,"results":"74","hashOfConfig":"45"},{"size":1196,"mtime":1638738329398,"results":"75","hashOfConfig":"45"},{"size":6662,"mtime":1639049271786,"results":"76","hashOfConfig":"45"},{"size":2142,"mtime":1638738329425,"results":"77","hashOfConfig":"45"},{"size":1104,"mtime":1638738329426,"results":"78","hashOfConfig":"45"},{"size":3295,"mtime":1639051490596,"results":"79","hashOfConfig":"45"},{"size":4416,"mtime":1639050637973,"results":"80","hashOfConfig":"45"},{"size":4414,"mtime":1638961687407,"results":"81","hashOfConfig":"45"},{"size":2808,"mtime":1639052423816,"results":"82","hashOfConfig":"45"},{"size":560,"mtime":1638738329401,"results":"83","hashOfConfig":"45"},{"size":1810,"mtime":1638964951487,"results":"84","hashOfConfig":"45"},{"size":2865,"mtime":1638964317037,"results":"85","hashOfConfig":"45"},{"size":3165,"mtime":1638962076414,"results":"86","hashOfConfig":"45"},{"size":4004,"mtime":1638738329403,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1t3bg9c",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"90"},"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\index.js",[],["186","187"],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\reportWebVitals.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\App.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js",["188","189"],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js",["190"],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Header\\header.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\ForgotPassword.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Login.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingOut.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingIn.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Register.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\UserAuth\\NameAndPhoto.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingReg.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebase.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\Posts.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Mobile\\FriendsDropLeft.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ProfilePage.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Desktop\\DesktopFriends.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\SearchBar.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js",["191"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  OverlayTrigger,\r\n  Button,\r\n  Popover,\r\n} from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"../Profile/Profile.css\";\r\n\r\nconst Profile = ({ user }) => {\r\n  const history = useHistory();\r\n  const [clickedUserData, setClickedUserData] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [hidePopup, setHidePopup] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { allUsers, storageRef, deleteFriend } = useData();\r\n  const mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    allUsers.forEach((x) => {\r\n      if (user === x.userId) {\r\n        storageRef\r\n          .child(x.profilePhoto)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            mounted.current && setUserPhoto(url);\r\n            setLoading(true);\r\n          });\r\n        mounted.current && setClickedUserData(x);\r\n      }\r\n    });\r\n    return () => (mounted.current = false);\r\n  }, [user]);\r\n  const {\r\n    createdAt,\r\n    email,\r\n    profilePhoto,\r\n    userId,\r\n    smallProfilePhoto,\r\n    ...otherData\r\n  } = clickedUserData || {};\r\n\r\n  let joinedAt;\r\n  if (createdAt) {\r\n    joinedAt = createdAt.toDate().toDateString();\r\n  }\r\n\r\n  const unfriend = () => {\r\n    deleteFriend(userId);\r\n    setHidePopup(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\" }}>\r\n      {loading ? (\r\n        <Card bsPrefix=\"Profile\">\r\n          <Col bsPrefix=\"userName\">\r\n            <h3 style={{ margin: \"auto\" }}>\r\n              {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n            </h3>\r\n          </Col>\r\n          <Card.Body bsPrefix=\"user\">\r\n            <a href={userPhoto} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img className=\"profileImage\" src={userPhoto} />\r\n            </a>\r\n            <Container>\r\n              <h5 style={{ textAlign: \"center\" }}>\r\n                About{\" \"}\r\n                {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n              </h5>\r\n              <br />\r\n              <Row style={{ display: \"grid\" }}>\r\n                {Object.entries({ ...otherData }).map(([key, value]) => (\r\n                  <p key={key}>\r\n                    {key}: {value}{\" \"}\r\n                  </p>\r\n                ))}\r\n              </Row>\r\n              <Row\r\n                style={{\r\n                  display: \"flex\",\r\n                }}\r\n              >\r\n                {otherData.status && (\r\n                  <OverlayTrigger\r\n                    show={hidePopup}\r\n                    trigger=\"click\"\r\n                    key=\"right\"\r\n                    placement=\"right\"\r\n                    overlay={\r\n                      <Popover id={\"popover-positioned-right\"}>\r\n                        <Popover.Title\r\n                          style={{\r\n                            fontSize: \"large\",\r\n                            color: \"rgb(79, 59, 120)\",\r\n                          }}\r\n                          as=\"h3\"\r\n                        >\r\n                          Unfriend this user?\r\n                        </Popover.Title>\r\n                        <Popover.Content>\r\n                          <Row\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\",\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              bsPrefix=\"chooseButton\"\r\n                              onClick={() => setHidePopup(false)}\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                            <Button onClick={unfriend} bsPrefix=\"chooseButton\">\r\n                              Confirm\r\n                            </Button>\r\n                          </Row>\r\n                        </Popover.Content>\r\n                      </Popover>\r\n                    }\r\n                  >\r\n                    <button\r\n                      onClick={() => setHidePopup(true)}\r\n                      style={{\r\n                        backgroundColor: \"rgb(79, 59, 120)\",\r\n                        color: \"aliceblue\",\r\n                      }}\r\n                    >\r\n                      Unfriend\r\n                    </button>\r\n                  </OverlayTrigger>\r\n                )}\r\n\r\n                <div style={{ marginLeft: \"auto\" }}>\r\n                  {joinedAt ? <>Joined at : {joinedAt.substring(4)}</> : <></>}\r\n                </div>\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <h1 style={{ color: \"aliceblue\", textAlign: \"center\" }}>...Loading</h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\AllPostsAssign.js",["192"],"import { useData } from \"./components/FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AllFriendsAssign from \"./AllFriendsAssign\";\r\n\r\n// here we map over all posts and friends and for every post we assign a user that created said post.\r\n// only friends and owners posts will be shown.\r\nconst AllPostsAssign = () => {\r\n  const allFriends = AllFriendsAssign();\r\n  const { userPosts, userData } = useData();\r\n  const [posts, setPosts] = useState();\r\n\r\n  if (allFriends) {\r\n    let ownerExists = allFriends.some(\r\n      (user) => user.userId === userData.userId\r\n    );\r\n\r\n    !ownerExists && allFriends.push(userData);\r\n  }\r\n\r\n  // map existing posts and add user object and post id into post object.\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (allFriends) {\r\n      const postsWithUsers = allFriends.map((y) => {\r\n        const usersAssignedToPosts = userPosts.map((x) => {\r\n          if (y.userId === x.data().userId) {\r\n            const q = Object.assign(x.data(), { id: x.id });\r\n            const z = Object.assign(q, { user: y });\r\n            return z;\r\n          }\r\n        });\r\n        return usersAssignedToPosts;\r\n      });\r\n      const noUndefined = postsWithUsers.flat().filter((post) => post);\r\n\r\n      if (noUndefined && mounted) setPosts(noUndefined);\r\n    }\r\n\r\n    return () => (mounted = false);\r\n  }, [userPosts, allFriends]);\r\n\r\n  // sort by time created and then reverse, so newest posts would be on top.\r\n  posts &&\r\n    posts.sort((a, b) => {\r\n      return a.createdAt.seconds - b.createdAt.seconds;\r\n    });\r\n  posts && posts.reverse();\r\n  return posts;\r\n};\r\n\r\nexport default AllPostsAssign;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\post.js",["193"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport LikeDislike from \"../../LikeDislike\";\r\nimport { Card, OverlayTrigger, Popover, Row, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useAuth } from \"../../FirebaseComponents/firebaseFunctionsAuth\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport useObserver from \"../../../Observer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport UserPhoto from \"../userPhoto\";\r\n\r\n// for observer\r\nconst options = {\r\n  rootMargin: \"0px 0px 500px\",\r\n};\r\n\r\nconst Post = ({ postData }) => {\r\n  const { pathname } = useLocation();\r\n  const params = useParams();\r\n  const mounted = useRef(true);\r\n  const ref = useRef();\r\n  const { currentUser } = useAuth();\r\n  const [postImage, setPostImage] = useState();\r\n  const [hidePopup, setHidePopup] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const { storageRef, deletePost } = useData();\r\n  const onScreen = useObserver(ref, options);\r\n\r\n  const { postPhoto, aboutPost, createdAt, video, user, likes, id } = postData;\r\n\r\n  const publishDate = createdAt.toDate().toDateString().substring(4);\r\n  if (onScreen) {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n    }, 1000);\r\n  } else {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (postPhoto) {\r\n      storageRef\r\n        .child(postPhoto)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          if (mounted.current) setPostImage(url);\r\n        });\r\n    }\r\n\r\n    if (pathname === \"/profile\" || pathname === `/profile/${params.user}`) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n    return () => (mounted.current = false);\r\n  }, [postData]);\r\n\r\n  const deletePostClick = () => {\r\n    deletePost(id, postPhoto);\r\n    setHidePopup(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} style={{width:'100%'}}>\r\n      {loading ? (\r\n        <Card\r\n          className=\"text-center\"\r\n          style={{\r\n            width: \"100%\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n            color: \"aliceblue\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {show ? (\r\n            <Card.Title style={{ margin: \"0\", display: \"flex\" }}>\r\n              <UserPhoto\r\n                size=\"60px\"\r\n                userPhoto={user.smallProfilePhoto}\r\n                user={user.userId}\r\n              />\r\n              <h5 style={{ margin: \"auto\", paddingRight: \"60px\" }}>\r\n                Posted by {user.UserName}\r\n              </h5>\r\n            </Card.Title>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {postImage ? (\r\n            <a href={postImage} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img\r\n                style={{\r\n                  height:'auto',\r\n                  maxHeight:'70vh',\r\n                  objectFit: \"cover\",\r\n                }}\r\n                variant=\"top\"\r\n                src={postImage}\r\n              />\r\n            </a>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {video ? (\r\n            <ReactPlayer controls={true} width=\"calc(100% - 1px)\" url={video} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Card.Body style={{ padding: \"0\" }}>\r\n            <Card.Title style={{ marginTop: \"20px\", fontSize:'calc(100% + 1vw)' }}>{aboutPost}</Card.Title>\r\n            <Card.Body\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"0\",\r\n                marginTop: \"70px\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {currentUser.uid === user.userId ? (\r\n                <OverlayTrigger\r\n                  show={hidePopup}\r\n                  trigger=\"click\"\r\n                  key=\"right\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id={\"popover-positioned-right\"}>\r\n                      <Popover.Title\r\n                        style={{ fontSize: \"large\", color: \"rgb(79, 59, 120)\" }}\r\n                        as=\"h3\"\r\n                      >\r\n                        Delete this post?\r\n                      </Popover.Title>\r\n                      <Popover.Content>\r\n                        <Row\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={() => setHidePopup(false)}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={deletePostClick}\r\n                          >\r\n                            Confirm\r\n                          </Button>\r\n                        </Row>\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"rgb(33, 27, 28)\",\r\n                      border: \"none\",\r\n                      cursor: \"default\",\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      onClick={() => setHidePopup(true)}\r\n                      icon={faTrash}\r\n                      style={{ color: \"aliceblue\", cursor: \"pointer\" }}\r\n                    />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <Card.Body style={{ border: \"none\", padding: \"0\" }}>\r\n                <LikeDislike\r\n                  id={id}\r\n                  likes={likes}\r\n                  size={false}\r\n                  collection=\"posts\"\r\n                />\r\n              </Card.Body>\r\n              <Card.Text\r\n                style={{ display: \"flex\", padding: \"0\", paddingRight: \"10px\",fontSize:'calc(70% + 0.3vw)', alignSelf:'end' }}\r\n              >\r\n                Date: {publishDate}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card.Body>\r\n          <Comments id={id} />\r\n        </Card>\r\n      ) : (\r\n        <ReactLoading type=\"spin\" height={150} width={150} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Friend.js",["194"],"import React, { useState } from \"react\";\r\nimport { FireDatabase } from \"../../FirebaseComponents/FirebaseDatabase\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport ChatRoom from \"./ChatRoom\";\r\nimport { faCheck, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport \"./Friend.css\";\r\n\r\nconst Friend = ({ user, position }) => {\r\n  const { addFriend, getMessages } = useData();\r\n  const { allUsersStatus } = FireDatabase() || {};\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  let isOnline;\r\n  if (allUsersStatus) {\r\n    Object.entries(allUsersStatus).filter((x) => {\r\n      if (x[0] === user.userId) {\r\n        isOnline = x[1].online;\r\n      }\r\n    });\r\n  }\r\n  const clickFriend = async () => {\r\n    await getMessages(user.userId);\r\n    setModalShow(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"friend\">\r\n      {user.status === \"friends\" && (\r\n        <>\r\n          <ChatRoom\r\n            user={user}\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n          />\r\n          <h6 onClick={clickFriend} className=\"userName\">\r\n            {user.UserName}\r\n          </h6>\r\n          <div\r\n            className={isOnline ? \"online\" : \"offline\"}\r\n            color={isOnline ? \"rgb(3, 182, 3)\" : \"white\"}\r\n          />\r\n        </>\r\n      )}\r\n      {user.status === \"confirm\" && (\r\n        <>\r\n          <OverlayTrigger\r\n            placement={position}\r\n            delay={{ show: 250, hide: 400 }}\r\n            overlay={\r\n              <Tooltip className=\"my-tooltip\" id={\"tooltip-right\"}>\r\n                {`${user.UserName} sent you friend request`}\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <h6 className=\"userName\">{user.UserName}</h6>\r\n          </OverlayTrigger>\r\n\r\n          <div style={{ backgroundColor: \"rgba(255, 255, 255, 0)\" }}>\r\n            <OverlayTrigger\r\n              placement={position}\r\n              delay={{ show: 250, hide: 400 }}\r\n              overlay={\r\n                <Tooltip className=\"my-tooltip\" id={\"tooltip-right\"}>\r\n                  {`${user.UserName} sent you friend request, click to cancel`}\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <FontAwesomeIcon\r\n                className={\r\n                  position === \"left\" ? \"accept-deny-left\" : \"accept-deny\"\r\n                }\r\n                icon={faBan}\r\n                color=\"aliceblue\"\r\n                onClick={() => addFriend(user.userId, \"cancel\")}\r\n              />\r\n            </OverlayTrigger>\r\n            <OverlayTrigger\r\n              placement={position}\r\n              delay={{ show: 250, hide: 200 }}\r\n              overlay={\r\n                <Tooltip className=\"my-tooltip\" id={\"tooltip-right\"}>\r\n                  {`${user.UserName} sent you friend request, click to accept`}\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <FontAwesomeIcon\r\n                className={\r\n                  position === \"left\" ? \"accept-deny-left\" : \"accept-deny\"\r\n                }\r\n                icon={faCheck}\r\n                color=\"aliceblue\"\r\n                onClick={() => addFriend(user.userId, \"friends\")}\r\n              />\r\n            </OverlayTrigger>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\AllFriendsAssign.js",["195","196"],"import { useData } from \"./components/FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AllFriendsAssign = () => {\r\n  const { allUsers, peopleFound, addFriend } = useData();\r\n  const [friends, setFriends] = useState();\r\n\r\n  //\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    //peopleFound has array of objects that contains users id that sent friend request or are friends and what is status of friend request.If matching id is found in allUsers then that users status is added.\r\n    const myFriends = peopleFound.map((p) => {\r\n      if (p.data().status === \"declined\") {\r\n        mounted && addFriend(p.id, \"declined\");\r\n      }\r\n      const filterToFriends = allUsers.filter((u) => {\r\n        if (u.userId === p.id) {\r\n          if (p.data().status === \"friends\" || p.data().status === \"confirm\") {\r\n            const y = Object.assign(u, p.data());\r\n            return y;\r\n          }\r\n        }\r\n      });\r\n      return filterToFriends;\r\n    });\r\n    if (myFriends && mounted) setFriends(myFriends.flat());\r\n\r\n    return () => (mounted = false);\r\n  }, [peopleFound, allUsers]);\r\n\r\n  return friends;\r\n};\r\n\r\nexport default AllFriendsAssign;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\Profile.js",["197"],"import React, { useState } from \"react\";\r\nimport { Card, Button, Col, Row, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faCheck, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"./Profile.css\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport DeleteUser from \"./DeleteUser\";\r\n\r\nconst Profile = (parentWidth) => {\r\n  const { userPhoto, userData, createUserProfilePhoto } = useData();\r\n  const [newProfilePhoto, setNewProfilePhoto] = useState();\r\n  const [confirmPhoto, setConfirmPhoto] = useState(false);\r\n  const [photoFile, setPhotoFile] = useState();\r\n  const [commentPhotoFile, setCommentPhotoFile] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [show1, setShow1] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleClose1 = () => setShow1(false);\r\n  const handleShow1 = () => setShow1(true);\r\n\r\n  // options for big photo of user profile\r\n  const options = {\r\n    maxSizeMB: 1,\r\n    maxWidthOrHeight: 1920,\r\n    useWebWorker: true,\r\n  };\r\n  // options for user photo user in comments.\r\n  const optionsComment = {\r\n    maxSizeMB: 0.2,\r\n    maxWidthOrHeight: 120,\r\n    useWebWorker: true,\r\n  };\r\n\r\n  const handleAddPhoto = async (e) => {\r\n    const file = e.target.files[0];\r\n    // file gets compressed into userProfile photo\r\n    const compressedFile = await imageCompression(file, options);\r\n    // file gets compressed into userProfile comment photo\r\n    const compressedFileComment = await imageCompression(file, optionsComment);\r\n    try {\r\n      setPhotoFile(compressedFile);\r\n      setCommentPhotoFile(compressedFileComment);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    if (compressedFile) {\r\n      setNewProfilePhoto(URL.createObjectURL(compressedFile));\r\n      setConfirmPhoto(true);\r\n    }\r\n  };\r\n\r\n  const uploadPhoto = () => {\r\n    // photoFile and commentPhotoFile is sent to storage, while newProfilePhoto is used as userPhoto until rerender.\r\n    createUserProfilePhoto(photoFile, newProfilePhoto, commentPhotoFile);\r\n    setConfirmPhoto(false);\r\n  };\r\n  const cancelPhoto = () => {\r\n    setConfirmPhoto(false);\r\n    setNewProfilePhoto();\r\n  };\r\n  // Destructure userData and take off what will not be needed in \"About Me\"\r\n  const {\r\n    profilePhoto,\r\n    createdAt,\r\n    email,\r\n    userId,\r\n    smallProfilePhoto,\r\n    ...otherData\r\n  } = userData || {};\r\n\r\n  const sortedOtherData = Object.entries({ ...otherData }).sort(\r\n    (a, b) => a[0].length - b[0].length\r\n  );\r\n\r\n  let joinedAt;\r\n  if (createdAt) {\r\n    joinedAt = createdAt.toDate().toDateString();\r\n  }\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"10px\"}}>\r\n      <Card className=\"Profile\">\r\n        <Card.Title className=\"userName\" style={{margin:'0', backgroundColor:'rgb(33, 27, 28)'}}>\r\n          <h3 style={{ margin: \"auto\" }}>\r\n            {userData ? userData.UserName : \"Profile Name\"}\r\n          </h3>\r\n        </Card.Title>\r\n        <Card.Body style={{width:'100%', padding:'0'}}>\r\n          <a href={userPhoto} target=\"_blank\" rel=\"noreferrer\">\r\n            <Card.Img\r\n              loading=\"lazy\"\r\n              className=\"profileImage\"\r\n              src={newProfilePhoto ? newProfilePhoto : userPhoto}\r\n            />\r\n          </a>\r\n          <Container>\r\n            <Row>\r\n              {!confirmPhoto ? (\r\n                <>\r\n                  <label htmlFor=\"file-upload\" className=\"file-upload\">\r\n                    <div className=\"fileUploadButton\">\r\n                      <FontAwesomeIcon\r\n                        className=\"awesomeAboutPhoto\"\r\n                        icon={faEdit}\r\n                        color=\"aliceblue\"\r\n                      />\r\n                      <input\r\n                        id=\"file-upload\"\r\n                        type=\"file\"\r\n                        accept=\"image/x-png, image/jpeg\"\r\n                        onChange={handleAddPhoto}\r\n                      />\r\n                    </div>\r\n                  </label>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FontAwesomeIcon\r\n                    className=\"cancel-confirm\"\r\n                    style={{ margin: \"5px 0 0 10px\" }}\r\n                    icon={faBan}\r\n                    color=\"aliceblue\"\r\n                    onClick={cancelPhoto}\r\n                  />\r\n                  <FontAwesomeIcon\r\n                    className=\"cancel-confirm\"\r\n                    style={{ marginLeft: \"auto\" }}\r\n                    icon={faCheck}\r\n                    color=\"aliceblue\"\r\n                    onClick={uploadPhoto}\r\n                  />\r\n                </>\r\n              )}\r\n            </Row>\r\n            <h5 style={{ textAlign: \"center\" }}>About Me</h5>\r\n            <br />\r\n            <Row style={{ marginBottom: \"20px\" }}>\r\n              {userData ? (\r\n                // If user exists map users inforamtion and put in \"About Me\"\r\n                sortedOtherData.map(([key, value]) => (\r\n                  <AboutMe key={key} name={key} value={value} />\r\n                ))\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Row>\r\n            <Row\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleShow}\r\n                bsPrefix=\"chooseButton\"\r\n                id='change-pass'\r\n              >\r\n                Change Password\r\n              </Button>\r\n              <ChangePassword handleClose={handleClose} show={show} />\r\n              <Button\r\n                onClick={handleShow1}\r\n                style={{\r\n                  color: \"aliceblue\",\r\n                  backgroundColor: \"rgb(65, 5, 0)\",\r\n                }}\r\n                bsPrefix=\"chooseButton\"\r\n                id='delete-user'\r\n              >\r\n                Delete user\r\n              </Button>\r\n              <DeleteUser handleClose1={handleClose1} show1={show1} />\r\n              <div style={{ alignSelf: \"flex-end\", marginLeft: \"auto\",fontSize:'calc(70% + 0.3vw)' }}>\r\n                <p style={{ textAlign: \"end\", marginBottom: \"0\" }}>{email}</p>\r\n                {joinedAt ? <>Joined at : {joinedAt.substring(4)}</> : <></>}\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\foundUser.js",["198","199"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport UserPhoto from \"../userPhoto\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst FoundUser = ({ user }) => {\r\n  const { addFriend, peopleFound } = useData();\r\n  const mounted = useRef(true);\r\n  const [currentStatus, setCurrentStatus] = useState(\"Add Friend\");\r\n  // if any data is found in peopleFound and coresponds to usersId that was searched for, it will set data in status state.\r\n  useEffect(() => {\r\n    peopleFound.forEach((u) => {\r\n      if (user.userId === u.id) {\r\n        mounted.current && setCurrentStatus(u.data().status);\r\n        if (u.data().status === \"declined\") {\r\n          mounted.current && setCurrentStatus(\"Add Friend\");\r\n        }\r\n      }\r\n    });\r\n    return () => (mounted.current = false);\r\n  }, [peopleFound]);\r\n\r\n  const changeStatus = () => {\r\n    switch (currentStatus) {\r\n      case \"Add Friend\":\r\n        setCurrentStatus(\"cancel\");\r\n        addFriend(user.userId, \"Add Friend\");\r\n        break;\r\n      case \"cancel\":\r\n        setCurrentStatus(\"Add Friend\");\r\n        addFriend(user.userId, \"cancel\");\r\n        break;\r\n      case \"confirm\":\r\n        setCurrentStatus(\"friends\");\r\n        addFriend(user.userId, \"friends\");\r\n        break;\r\n      case \"friends\":\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"foundUser\">\r\n      <div className=\"foundUser\">\r\n        <UserPhoto size=\"30px\" userPhoto={user.smallProfilePhoto} />\r\n        <h5>{user.UserName}</h5>\r\n      </div>\r\n      <div style={{ width: \"max-content\", marginLeft: \"auto\" }}>\r\n        {currentStatus === \"confirm\" ? (\r\n          <button\r\n            className=\"requestFriend\"\r\n            onClick={() => {\r\n              addFriend(user.userId, \"cancel\");\r\n              setCurrentStatus(\"Add Friend\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <button onClick={changeStatus} className=\"requestFriend\">\r\n          {currentStatus}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FoundUser;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\userPhoto.js",["200"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useData } from \"../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nconst UserPhoto = ({ user, userPhoto, size }) => {\r\n  const { storageRef } = useData();\r\n  const history = useHistory();\r\n  const mounted = useRef(true);\r\n  const [photo, setPhoto] = useState();\r\n\r\n  useEffect(() => {\r\n    storageRef\r\n      .child(userPhoto)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        mounted.current && setPhoto(url);\r\n      });\r\n    return () => (mounted.current = false);\r\n  }, [user]);\r\n  return (\r\n    <Image\r\n      onClick={() =>\r\n        user === undefined ? null : history.push(`/profile/${user}`)\r\n      }\r\n      src={photo}\r\n      roundedCircle\r\n      style={{\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"rgb(79,59,120)\",\r\n        width: size,\r\n        height: size,\r\n        objectFit: \"cover\",\r\n        border: \"1px solid black\",\r\n        boxShadow: \"1px 1px black\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default UserPhoto;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\DeleteUser.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ChangePassword.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\ChatRoom.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\AboutMe.js",["201"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faCheck, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nconst AboutMe = ({ value, name }) => {\r\n  const [edit, setEdit] = useState(true);\r\n  const inputValue = useRef(\"\");\r\n  const { updateUserProfile, userData, getUsers } = useData();\r\n  const [data, setData] = useState({ [name]: value });\r\n  const [upload, setUpload] = useState(false);\r\n\r\n  // Here unchanged userData is combined with new userData.\r\n  const x = userData;\r\n  const y = Object.assign(x, data);\r\n\r\n  // If user confirms his edit of data user profile gets updated.\r\n  const updateUser = async () => {\r\n    await updateUserProfile(y);\r\n    setUpload(false);\r\n    if (data.UserName)\r\n      if (userData.UserName !== typeof data.UserName) {\r\n        getUsers();\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload) {\r\n      updateUser();\r\n    }\r\n    return () => setUpload(false);\r\n  }, [upload]);\r\n\r\n  const editAboutMe = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const confirmEdit = () => {\r\n    setEdit(true);\r\n    setData({ [name]: inputValue.current.value });\r\n    setUpload(true);\r\n  };\r\n  const cancelEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{ display: \"flex\", marginTop: \"10px\", paddingRight: \"0\"}}\r\n    >\r\n      <div style={{ display: \"flex\"}}>\r\n        {name}:\r\n        {edit ? (\r\n          <div style={{ marginLeft: \"5px\" }}>{value}</div>\r\n        ) : (\r\n          <input style={{ color: \"aliceblue\", width:'100%' }} ref={inputValue} />\r\n        )}\r\n      </div>\r\n      <div style={{ width: \"max-content\", display:'flex' }} className=\"aboutMe-buttonGroup\">\r\n        {edit ? (\r\n          <button className=\"aboutMe-button\" onClick={editAboutMe}>\r\n            <FontAwesomeIcon\r\n              className=\"awesomeAbout\"\r\n              icon={faEdit}\r\n              color=\"aliceblue\"\r\n              style={{marginLeft:'auto'}}\r\n            />\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <button className=\"aboutMe-button\" onClick={confirmEdit}>\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faCheck}\r\n                color=\"aliceblue\"\r\n                \r\n              />\r\n            </button>\r\n            <button onClick={cancelEdit} className=\"aboutMe-button\" id=\"onOff1\">\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faBan}\r\n                color=\"aliceblue\"\r\n              />\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\Observer.js",["202","203"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useObserver = (ref, options) => {\r\n  const [Intersecting, setIntersecting] = useState(false);\r\n\r\n  const observer = new IntersectionObserver(([entry]) => {\r\n    if (!entry.isIntersecting) {\r\n      return;\r\n    }\r\n    setIntersecting(entry.isIntersecting);\r\n    observer.unobserve(entry.target);\r\n  }, options);\r\n\r\n  useEffect(() => {\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return Intersecting;\r\n};\r\nexport default useObserver;\r\n","C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\LikeDislike.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\Comments.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Message.js",[],"C:\\Users\\lukas\\OneDrive\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\SingleComment.js",["204","205"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport LikeDislike from \"../../LikeDislike\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SingleComment = ({ comment, id }) => {\r\n  const { storageRef, userData, deleteComment, allUsers } = useData();\r\n  const [commentPhoto, setCommentPhoto] = useState();\r\n  const [trashColor, setTrashColor] = useState(\"aliceblue\");\r\n  const history = useHistory();\r\n  const mounted = useRef(true);\r\n\r\n  useEffect(() => {\r\n    allUsers.map((user) => {\r\n      if (user.userId === comment.userId) {\r\n        storageRef\r\n          .child(user.smallProfilePhoto)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            mounted.current && setCommentPhoto(url);\r\n          });\r\n      }\r\n    });\r\n\r\n    return () => (mounted.current = false);\r\n  }, [allUsers]);\r\n\r\n  // When delete comment is clicked it will make it color red and if it clicked again whithin 5seconds\r\n  // it will delete comment, other wise it will turn back to white.\r\n  const mightDeleteComment = async () => {\r\n    if (trashColor === \"red\") {\r\n      await deleteComment(id);\r\n    }\r\n    setTrashColor(\"red\");\r\n    setTimeout(() => {\r\n      setTrashColor(\"aliceblue\");\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <Card.Body style={{ padding: \"0\", minHeight: \"fit-content\" }}>\r\n      <Container style={{ border: \"1px solid rgb(240,248,255,0.2)\" }}>\r\n        <p\r\n          style={{\r\n            fontSize: \"80%\",\r\n            textAlign: \"start\",\r\n            marginBottom: \"8px\",\r\n          }}\r\n        >\r\n          {comment.comment}\r\n        </p>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Row style={{ marginLeft: \"5px\" }}>\r\n            {commentPhoto ? (\r\n              <img\r\n                onClick={() => history.push(`/profile/${comment.userId}`)}\r\n                style={{ cursor: \"pointer\", objectFit: \"cover\" }}\r\n                alt={comment.UserName}\r\n                src={commentPhoto}\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"70%\",\r\n                marginLeft: \"5px\",\r\n                marginBottom: \"0\",\r\n                marginTop: \"auto\",\r\n              }}\r\n            >\r\n              {comment.UserName}\r\n            </p>\r\n            {comment.userId === userData.userId ? (\r\n              <FontAwesomeIcon\r\n                onClick={mightDeleteComment}\r\n                icon={faTrash}\r\n                style={{\r\n                  color: trashColor,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"20px\",\r\n                  fontSize: \"70%\",\r\n                  marginTop: \"auto\",\r\n                  marginBottom: \"2px\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Row>\r\n          <div\r\n            style={{\r\n              fontSize: \"70%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"20px\",\r\n              marginBottom: \"0\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            <LikeDislike\r\n              collection=\"comments\"\r\n              id={id}\r\n              likes={comment.likes}\r\n              size={true}\r\n            />\r\n          </div>\r\n          <p\r\n            style={{\r\n              fontSize: \"70%\",\r\n              textAlign: \"end\",\r\n              marginRight: \"2px\",\r\n              marginBottom: \"0\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            {comment.createdAt.toDate().toLocaleTimeString(\"en-US\")}\r\n          </p>\r\n        </Row>\r\n      </Container>\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default SingleComment;\r\n",{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":550,"column":6,"nodeType":"212","endLine":550,"endColumn":28,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":568,"column":6,"nodeType":"212","endLine":568,"endColumn":19,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"216","line":53,"column":6,"nodeType":"212","endLine":53,"endColumn":19,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"218","line":38,"column":6,"nodeType":"212","endLine":38,"endColumn":12,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":26,"column":56,"nodeType":"222","messageId":"223","endLine":26,"endColumn":58},{"ruleId":"210","severity":1,"message":"224","line":62,"column":6,"nodeType":"212","endLine":62,"endColumn":16,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"226","line":17,"column":47,"nodeType":"222","messageId":"227","endLine":17,"endColumn":49},{"ruleId":"220","severity":1,"message":"228","line":16,"column":51,"nodeType":"222","messageId":"223","endLine":16,"endColumn":53},{"ruleId":"210","severity":1,"message":"229","line":29,"column":6,"nodeType":"212","endLine":29,"endColumn":29,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":2,"column":24,"nodeType":"233","messageId":"234","endLine":2,"endColumn":27},{"ruleId":"210","severity":1,"message":"235","line":21,"column":6,"nodeType":"212","endLine":21,"endColumn":19,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":24,"column":5,"nodeType":"239","messageId":"240","endLine":39,"endColumn":6},{"ruleId":"210","severity":1,"message":"241","line":20,"column":6,"nodeType":"212","endLine":20,"endColumn":12,"suggestions":"242"},{"ruleId":"210","severity":1,"message":"243","line":33,"column":6,"nodeType":"212","endLine":33,"endColumn":14,"suggestions":"244"},{"ruleId":"231","severity":1,"message":"245","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"246","line":19,"column":6,"nodeType":"212","endLine":19,"endColumn":8,"suggestions":"247"},{"ruleId":"220","severity":1,"message":"248","line":17,"column":25,"nodeType":"222","messageId":"227","endLine":17,"endColumn":27},{"ruleId":"210","severity":1,"message":"249","line":29,"column":6,"nodeType":"212","endLine":29,"endColumn":16,"suggestions":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrievePosts'. Either include it or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has missing dependencies: 'UserProfile', 'findFriends', 'getUsers', and 'retrieveComments'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'allUsers' and 'storageRef'. Either include them or remove the dependency array.",["256"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'params.user', 'pathname', 'postPhoto', and 'storageRef'. Either include them or remove the dependency array.",["257"],"Array.prototype.filter() expects a return value from arrow function.","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","React Hook useEffect has a missing dependency: 'addFriend'. Either include it or remove the dependency array.",["258"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'user.userId'. Either include it or remove the dependency array.",["259"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'storageRef' and 'userPhoto'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'updateUser'. Either include it or remove the dependency array.",["261"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'observer' and 'ref'. Either include them or remove the dependency array.",["262"],"Array.prototype.map() expects a return value from arrow function.","React Hook useEffect has missing dependencies: 'comment.userId' and 'storageRef'. Either include them or remove the dependency array.",["263"],"no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [newPost, currentUser, retrievePosts]",{"range":"286","text":"287"},"Update the dependencies array to be: [UserProfile, currentUser, findFriends, getUsers, retrieveComments]",{"range":"288","text":"289"},"Update the dependencies array to be: [currentUser, getData]",{"range":"290","text":"291"},"Update the dependencies array to be: [allUsers, storageRef, user]",{"range":"292","text":"293"},"Update the dependencies array to be: [params.user, pathname, postData, postPhoto, storageRef]",{"range":"294","text":"295"},"Update the dependencies array to be: [peopleFound, allUsers, addFriend]",{"range":"296","text":"297"},"Update the dependencies array to be: [peopleFound, user.userId]",{"range":"298","text":"299"},"Update the dependencies array to be: [storageRef, user, userPhoto]",{"range":"300","text":"301"},"Update the dependencies array to be: [updateUser, upload]",{"range":"302","text":"303"},"Update the dependencies array to be: [observer, ref]",{"range":"304","text":"305"},"Update the dependencies array to be: [allUsers, comment.userId, storageRef]",{"range":"306","text":"307"},[15980,16002],"[newPost, currentUser, retrievePosts]",[16357,16370],"[UserProfile, currentUser, findFriends, getUsers, retrieveComments]",[1356,1369],"[currentUser, getData]",[1121,1127],"[allUsers, storageRef, user]",[2040,2050],"[params.user, pathname, postData, postPhoto, storageRef]",[1108,1131],"[peopleFound, allUsers, addFriend]",[857,870],"[peopleFound, user.userId]",[639,645],"[storageRef, user, userPhoto]",[1126,1134],"[updateUser, upload]",[495,497],"[observer, ref]",[1076,1086],"[allUsers, comment.userId, storageRef]"]