[{"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\index.js":"1","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\App.js":"2","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\reportWebVitals.js":"3","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js":"4","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js":"5","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js":"6","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Header\\header.js":"7","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Register.js":"8","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Login.js":"9","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\ForgotPassword.js":"10","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\NameAndPhoto.js":"11","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingIn.js":"12","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingReg.js":"13","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingOut.js":"14","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js":"15","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebase.js":"16","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ProfilePage.js":"17","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js":"18","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\Posts.js":"19","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js":"20","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js":"21","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\Profile.js":"22","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\post.js":"23","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\AllPostsAssign.js":"24","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js":"25","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js":"26","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js":"27","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\DeleteUser.js":"28","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\Observer.js":"29","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\LikeDislike.js":"30","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ChangePassword.js":"31","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\Comments.js":"32","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\AboutMe.js":"33","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Message.js":"34","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\SingleComment.js":"35","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Mobile\\FriendsDropLeft.js":"36","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Desktop\\DesktopFriends.js":"37","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Friend.js":"38","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\ChatRoom.js":"39","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\SearchBar.js":"40","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\foundUser.js":"41","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\userPhoto.js":"42"},{"size":1065,"mtime":1617025867052,"results":"43","hashOfConfig":"44"},{"size":3289,"mtime":1617635451607,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1617025867057,"results":"46","hashOfConfig":"44"},{"size":2638,"mtime":1620241439782,"results":"47","hashOfConfig":"44"},{"size":13724,"mtime":1621164475535,"results":"48","hashOfConfig":"44"},{"size":1405,"mtime":1620321641450,"results":"49","hashOfConfig":"44"},{"size":4253,"mtime":1620324016541,"results":"50","hashOfConfig":"44"},{"size":3618,"mtime":1617025867051,"results":"51","hashOfConfig":"44"},{"size":2220,"mtime":1617025867049,"results":"52","hashOfConfig":"44"},{"size":1646,"mtime":1617025867048,"results":"53","hashOfConfig":"44"},{"size":4234,"mtime":1617025867050,"results":"54","hashOfConfig":"44"},{"size":755,"mtime":1617025867046,"results":"55","hashOfConfig":"44"},{"size":473,"mtime":1617025867047,"results":"56","hashOfConfig":"44"},{"size":463,"mtime":1617025867047,"results":"57","hashOfConfig":"44"},{"size":758,"mtime":1617025867048,"results":"58","hashOfConfig":"44"},{"size":988,"mtime":1617025867039,"results":"59","hashOfConfig":"44"},{"size":1353,"mtime":1617025867037,"results":"60","hashOfConfig":"44"},{"size":3919,"mtime":1617025867026,"results":"61","hashOfConfig":"44"},{"size":581,"mtime":1617025867033,"results":"62","hashOfConfig":"44"},{"size":797,"mtime":1617025867032,"results":"63","hashOfConfig":"44"},{"size":1335,"mtime":1617025867028,"results":"64","hashOfConfig":"44"},{"size":7003,"mtime":1620321066332,"results":"65","hashOfConfig":"44"},{"size":6602,"mtime":1620022152082,"results":"66","hashOfConfig":"44"},{"size":773,"mtime":1617025867021,"results":"67","hashOfConfig":"44"},{"size":2610,"mtime":1617650106552,"results":"68","hashOfConfig":"44"},{"size":1587,"mtime":1617025867027,"results":"69","hashOfConfig":"44"},{"size":3217,"mtime":1619966856172,"results":"70","hashOfConfig":"44"},{"size":2936,"mtime":1617025867035,"results":"71","hashOfConfig":"44"},{"size":560,"mtime":1617218496455,"results":"72","hashOfConfig":"44"},{"size":1785,"mtime":1617025867045,"results":"73","hashOfConfig":"44"},{"size":4336,"mtime":1617025867035,"results":"74","hashOfConfig":"44"},{"size":2793,"mtime":1618427947892,"results":"75","hashOfConfig":"44"},{"size":2681,"mtime":1617025867034,"results":"76","hashOfConfig":"44"},{"size":1345,"mtime":1618428059075,"results":"77","hashOfConfig":"44"},{"size":3958,"mtime":1617649834115,"results":"78","hashOfConfig":"44"},{"size":1901,"mtime":1621165586204,"results":"79","hashOfConfig":"44"},{"size":918,"mtime":1621165468817,"results":"80","hashOfConfig":"44"},{"size":948,"mtime":1619962681416,"results":"81","hashOfConfig":"44"},{"size":3002,"mtime":1617634557840,"results":"82","hashOfConfig":"44"},{"size":1973,"mtime":1620840569650,"results":"83","hashOfConfig":"44"},{"size":2091,"mtime":1621164486784,"results":"84","hashOfConfig":"44"},{"size":999,"mtime":1618428361072,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1i342ga",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\index.js",[],["184","185"],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\App.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\reportWebVitals.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js",["186","187","188"],"import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { storage, firestore } from \"./firebase\";\r\nimport { useAuth } from \"./firebaseFunctionsAuth\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst FileContext = React.createContext();\r\n\r\nexport const useData = () => {\r\n  return useContext(FileContext);\r\n};\r\n\r\nexport const storageRef = storage.ref();\r\n\r\nconst FirebaseFunctionsFiles = ({ children }) => {\r\n  const { currentUser, deleteUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [userPosts, setUserPosts] = useState();\r\n  const [peopleFound, setPeopleFound] = useState();\r\n  const newPost = useRef(true);\r\n  const [allUsers, setAllUsers] = useState();\r\n  const [comments, setComments] = useState();\r\n  const [recipientMessages, setRecipientMessages] = useState();\r\n  const [senderMessages, setSenderMessages] = useState();\r\n\r\n  // random id generator for naming post photos.\r\n  const uuidv4 = () => {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n      (\r\n        c ^\r\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n      ).toString(16)\r\n    );\r\n  };\r\n\r\n  const currentTime = new Date();\r\n\r\n  const createUserProfile = (userName) => {\r\n    const { email } = currentUser;\r\n    const profilePhoto = storage.ref(\r\n      `${currentUser.uid}/profilePhoto/profilePic`\r\n    ).fullPath;\r\n\r\n    return firestore\r\n      .collection(\"users\")\r\n      .doc(`${currentUser.uid}`)\r\n      .set({\r\n        email: email,\r\n        createdAt: currentTime,\r\n        profilePhoto: profilePhoto,\r\n        smallProfilePhoto: `${currentUser.uid}/commentPhoto/commentPic`,\r\n        UserName: userName,\r\n        Name: \"Name\",\r\n        Hobby: \"Hobby\",\r\n        Age: \"Age\",\r\n        Country: \"Country\",\r\n        Job: \"Job\",\r\n      });\r\n  };\r\n\r\n  const updateUserProfile = (y) => {\r\n    const { Age, Hobby, UserName, Job, Country, Name } = y;\r\n    return firestore.collection(\"users\").doc(`${currentUser.uid}`).update({\r\n      UserName: UserName,\r\n      Hobby: Hobby,\r\n      Name: Name,\r\n      Age: Age,\r\n      Country: Country,\r\n      Job: Job,\r\n    });\r\n  };\r\n  // For adding and updating user profile photo.\r\n  const createUserProfilePhoto = (\r\n    profilePhoto,\r\n    newProfilePhoto,\r\n    commentPhoto\r\n  ) => {\r\n    if (newProfilePhoto) {\r\n      // if user puts new profile photo, newProfilePhoto is used until rerender.\r\n      setUserPhoto(newProfilePhoto);\r\n    }\r\n    storageRef\r\n      .child(`${currentUser.uid}/commentPhoto/commentPic`)\r\n      .put(commentPhoto);\r\n    // not converted profilePhoto file is sent to storage and will be used as profilePhoto after render.\r\n    // And getUsers are run to update everything with new profile photo.\r\n    return storageRef\r\n      .child(`${currentUser.uid}/profilePhoto/profilePic`)\r\n      .put(profilePhoto)\r\n      .on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          if (progress === 100) {\r\n            getUsers();\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error, \"error at uploading user photo\");\r\n        }\r\n      );\r\n  };\r\n  // Getting data of currently logged in user.\r\n  const UserProfile = async () => {\r\n    if (currentUser) {\r\n      try {\r\n        const docRef = await firestore.collection(\"users\").doc(currentUser.uid);\r\n        docRef.onSnapshot((doc) => {\r\n          if (doc && doc.exists) {\r\n            const x = Object.assign(doc.data(), { userId: doc.id });\r\n            setUserData(x);\r\n            setTimeout(() => {\r\n              storageRef\r\n                .child(`${currentUser.uid}/profilePhoto/profilePic`)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  setUserPhoto(url);\r\n                });\r\n            }, 500);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Getting all existing users.\r\n  const getUsers = async () => {\r\n    const y = [];\r\n    return await firestore.collection(\"users\").onSnapshot((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        const x = Object.assign(doc.data(), { userId: doc.id });\r\n        y.push(x);\r\n      });\r\n      const filterY = y.filter(\r\n        (v, i, a) =>\r\n          a.findIndex(\r\n            (t) => JSON.stringify(t.userId) === JSON.stringify(v.userId)\r\n          ) === i\r\n      );\r\n      setAllUsers(filterY);\r\n    });\r\n  };\r\n  // Getting all posts.\r\n  const retrievePosts = async () => {\r\n    if (newPost) {\r\n      await firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n        setUserPosts(querySnapshot.docs);\r\n      });\r\n    }\r\n  };\r\n\r\n  // used to create text post.\r\n  const createPostT = (postText) => {\r\n    if (postText) {\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used to create photo post, using chosen photo from users device.\r\n  const createPostP = (postText, photoFile, y) => {\r\n    if (photoFile) {\r\n      const x = storage.ref(\r\n        `${currentUser.uid}/PostPhotos/${y}${photoFile.name}`\r\n      ).fullPath;\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        randomKey: y,\r\n        postPhoto: x,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used to create video post, using youtube or soundcloud url.\r\n  const createPostV = (postText, sendUrl) => {\r\n    if (sendUrl) {\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        video: sendUrl,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used for putting users post photos in storage and once that is done,\r\n  //  it runs function that creates new user photo post.\r\n  const uploadPostPhoto = (postText, photoFile) => {\r\n    const y = uuidv4();\r\n    return storageRef\r\n      .child(`${currentUser.uid}/PostPhotos/${y}${photoFile.name}`)\r\n      .put(photoFile)\r\n      .on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          if (progress === 100) {\r\n            setTimeout(() => {\r\n              createPostP(postText, photoFile, y);\r\n              newPost.current = true;\r\n            }, 500);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error, \"error at uploading post photo\");\r\n        }\r\n      );\r\n  };\r\n\r\n  const getLikeDislike = (like, postId, collection) => {\r\n    return firestore.collection(collection).doc(postId).update({\r\n      likes: like,\r\n    });\r\n  };\r\n  // Getting all Comments.\r\n  const retrieveComments = async () => {\r\n    await firestore\r\n      .collection(\"comments\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setComments(querySnapshot.docs.reverse());\r\n      });\r\n  };\r\n\r\n  const createComment = (commentText, postId) => {\r\n    return firestore.collection(\"comments\").doc().set({\r\n      UserName: userData.UserName,\r\n      comment: commentText,\r\n      likes: 0,\r\n      createdAt: currentTime,\r\n      userId: currentUser.uid,\r\n      postId: postId,\r\n    });\r\n  };\r\n\r\n  const getMessages = async () => {\r\n    await firestore\r\n      .collection(\"messages\")\r\n      .where(\"recipient\", \"==\", currentUser.uid)\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setRecipientMessages(querySnapshot.docs);\r\n      });\r\n    await firestore\r\n      .collection(\"messages\")\r\n      .where(\"sender\", \"==\", currentUser.uid)\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setSenderMessages(querySnapshot.docs);\r\n      });\r\n  };\r\n\r\n  const writeMessage = (message, recipient) => {\r\n    return firestore.collection(\"messages\").doc().set({\r\n      message: message,\r\n      createdAt: currentTime,\r\n      sender: currentUser.uid,\r\n      recipient: recipient,\r\n    });\r\n  };\r\n\r\n  const findFriends = async () => {\r\n    await firestore\r\n      .collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"friends\")\r\n      .onSnapshot((snapshot) => {\r\n        setPeopleFound(snapshot.docs);\r\n      });\r\n  };\r\n\r\n  const addFriend = (pendingFriend, doWhat) => {\r\n    const setFriends = () => {\r\n      switch (doWhat) {\r\n        case \"friends\":\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"friends\")\r\n            .doc(pendingFriend)\r\n            .set({\r\n              status: \"friends\",\r\n            });\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(pendingFriend)\r\n            .collection(\"friends\")\r\n            .doc(currentUser.uid)\r\n            .set({\r\n              status: \"friends\",\r\n            });\r\n          break;\r\n        case \"cancel\":\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"friends\")\r\n            .doc(pendingFriend)\r\n            .set({\r\n              status: \"declined\",\r\n            });\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(pendingFriend)\r\n            .collection(\"friends\")\r\n            .doc(currentUser.uid)\r\n            .set({\r\n              status: \"declined\",\r\n            });\r\n          break;\r\n        case \"declined\":\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"friends\")\r\n            .doc(pendingFriend)\r\n            .delete();\r\n\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(pendingFriend)\r\n            .collection(\"friends\")\r\n            .doc(currentUser.uid)\r\n            .delete();\r\n          break;\r\n        case \"Add Friend\":\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(pendingFriend)\r\n            .collection(\"friends\")\r\n            .doc(currentUser.uid)\r\n            .set({ status: \"confirm\" });\r\n\r\n          firestore\r\n            .collection(\"users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"friends\")\r\n            .doc(pendingFriend)\r\n            .set({ status: \"cancel\" });\r\n\r\n        default:\r\n          return;\r\n      }\r\n    };\r\n\r\n    return setFriends();\r\n  };\r\n\r\n  const deleteComment = async (commentId) => {\r\n    await firestore.collection(\"comments\").doc(commentId).delete();\r\n  };\r\n  // delete post and run retrievePosts to update what user sees.\r\n  // every comment that has postId of post that is being deleted will get deleted as well.\r\n  const deletePost = async (postId, postPhoto) => {\r\n    await firestore.collection(\"posts\").doc(postId).delete();\r\n    firestore\r\n      .collection(\"comments\")\r\n      .where(\"postId\", \"==\", postId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deleteComment(doc.id);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    if (postPhoto) {\r\n      storageRef.child(postPhoto).delete();\r\n    }\r\n  };\r\n  // hapens when user does byeBye :(\r\n  const deleteUserData = () => {\r\n    firestore\r\n      .collection(\"comments\")\r\n      .where(\"userId\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deleteComment(doc.id);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    firestore\r\n      .collection(\"posts\")\r\n      .where(\"userId\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deletePost(doc.id, doc.data().postPhoto);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .then(() => {\r\n        storageRef.child(`${currentUser.uid}/profilePhoto/profilePic`).delete();\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .then(() => {\r\n        firestore.collection(\"users\").doc(currentUser.uid).delete();\r\n        setTimeout(() => {\r\n          deleteUser();\r\n        }, 1000);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUserData();\r\n    setUserPhoto();\r\n  };\r\n  // Every time new post is created use Effect updates posts, that are shown.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (newPost) {\r\n        retrievePosts();\r\n      }\r\n    }\r\n    return () => (newPost.current = false);\r\n  }, [newPost, currentUser]);\r\n  // get all users data.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      getUsers();\r\n      UserProfile();\r\n      retrieveComments();\r\n      getMessages();\r\n      findFriends();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // functions and data for exporting.\r\n  const functions = {\r\n    // functions\r\n    createUserProfilePhoto,\r\n    createUserProfile,\r\n    UserProfile,\r\n    updateUserProfile,\r\n    uploadPostPhoto,\r\n    createPostT,\r\n    createPostV,\r\n    getLikeDislike,\r\n    deletePost,\r\n    getUsers,\r\n    deleteUserData,\r\n    createComment,\r\n    deleteComment,\r\n    writeMessage,\r\n    addFriend,\r\n    // functions\r\n    // data\r\n    userData,\r\n    userPhoto,\r\n    userPosts,\r\n    storageRef,\r\n    allUsers,\r\n    comments,\r\n    senderMessages,\r\n    recipientMessages,\r\n    peopleFound,\r\n    // data\r\n  };\r\n  return (\r\n    <FileContext.Provider value={functions}>{children}</FileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseFunctionsFiles;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js",["189"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./firebaseFunctionsAuth\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst FileContext = React.createContext();\r\n\r\nexport const FireDatabase = () => {\r\n  return useContext(FileContext);\r\n};\r\n\r\nconst FirebaseDatabase = ({ children }) => {\r\n  const [allUsersStatus, setAllUsersStatus] = useState();\r\n  const { currentUser } = useAuth();\r\n  const userOffline = () => {\r\n    return firebase\r\n      .database()\r\n      .ref(`users/${currentUser.uid}`)\r\n      .onDisconnect()\r\n      .set({\r\n        online: false,\r\n      });\r\n  };\r\n  const logOff = () => {\r\n    return firebase.database().ref(`users/${currentUser.uid}`).set({\r\n      online: false,\r\n    });\r\n  };\r\n  const userOnline = () => {\r\n    return firebase.database().ref(`users/${currentUser.uid}`).set({\r\n      online: true,\r\n    });\r\n  };\r\n  const getData = async () => {\r\n    const dataRef = await firebase.database().ref(\"users\");\r\n    dataRef.on(\"value\", (snapshot) => {\r\n      setAllUsersStatus(snapshot.val());\r\n    });\r\n    userOffline();\r\n    userOnline();\r\n  };\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      getData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const functions = {\r\n    allUsersStatus,\r\n    logOff,\r\n  };\r\n  return (\r\n    <FileContext.Provider value={functions}>{children}</FileContext.Provider>\r\n  );\r\n};\r\nexport default FirebaseDatabase;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Header\\header.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Register.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\Login.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\ForgotPassword.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\UserAuth\\NameAndPhoto.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingIn.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingReg.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingOut.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\FirebaseComponents\\firebase.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ProfilePage.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\Posts.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\Profile.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Posts\\post.js",["190","191"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport LikeDislike from \"../../LikeDislike\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Row,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useAuth } from \"../../FirebaseComponents/firebaseFunctionsAuth\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport useObserver from \"../../../Observer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport UserPhoto from \"../userPhoto\";\r\n\r\n// for observer\r\nconst options = {\r\n  rootMargin: \"0px 0px 500px\",\r\n};\r\n\r\nconst Post = ({ postData }) => {\r\n  const { pathname } = useLocation();\r\n  const params = useParams();\r\n  const ref = useRef();\r\n  const { currentUser } = useAuth();\r\n  const [postImage, setPostImage] = useState();\r\n  const [hidePopup, setHidePopup] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const { storageRef, deletePost } = useData();\r\n  const onScreen = useObserver(ref, options);\r\n\r\n  const { postPhoto, aboutPost, createdAt, video, user, likes, id } = postData;\r\n\r\n  const publishDate = createdAt.toDate().toDateString().substring(4);\r\n  if (onScreen) {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n    }, 1000);\r\n  } else {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (postPhoto) {\r\n      storageRef\r\n        .child(postPhoto)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setPostImage(url);\r\n        });\r\n    }\r\n    if (pathname === \"/profile\" || pathname === `/profile/${params.user}`) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  }, [postData]);\r\n\r\n  const deletePostClick = () => {\r\n    deletePost(id, postPhoto);\r\n    setHidePopup(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      {loading ? (\r\n        <Card\r\n          className=\"text-center\"\r\n          style={{\r\n            width: \"770px\",\r\n            minWidth: \"400px\",\r\n            marginTop: \"20px\",\r\n            color: \"aliceblue\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {show ? (\r\n            <Card.Title style={{ margin: \"0\", display: \"flex\" }}>\r\n              <UserPhoto\r\n                size=\"60px\"\r\n                userPhoto={user.smallProfilePhoto}\r\n                user={user.userId}\r\n              />\r\n              <h5 style={{ margin: \"auto\", paddingRight: \"60px\" }}>\r\n                Posted by {user.UserName}\r\n              </h5>\r\n            </Card.Title>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {postImage ? (\r\n            <a href={postImage} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img\r\n                style={{\r\n                  maxHeight: \"600px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n                variant=\"top\"\r\n                src={postImage}\r\n              />\r\n            </a>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {video ? (\r\n            <ReactPlayer controls={true} width=\"768px\" url={video} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Card.Body style={{ padding: \"0\" }}>\r\n            <Card.Title style={{ marginTop: \"20px\" }}>{aboutPost}</Card.Title>\r\n            <Card.Body\r\n              style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"repeat(3, auto)\",\r\n                padding: \"0\",\r\n                marginTop: \"70px\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {currentUser.uid === user.userId ? (\r\n                <OverlayTrigger\r\n                  show={hidePopup}\r\n                  trigger=\"click\"\r\n                  key=\"right\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id={\"popover-positioned-right\"}>\r\n                      <Popover.Title\r\n                        style={{ fontSize: \"large\", color: \"rgb(79, 59, 120)\" }}\r\n                        as=\"h3\"\r\n                      >\r\n                        Delete this post?\r\n                      </Popover.Title>\r\n                      <Popover.Content>\r\n                        <Row\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={() => setHidePopup(false)}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={deletePostClick}\r\n                          >\r\n                            Confirm\r\n                          </Button>\r\n                        </Row>\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"rgb(33, 27, 28)\",\r\n                      border: \"none\",\r\n                      cursor: \"default\",\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      onClick={() => setHidePopup(true)}\r\n                      icon={faTrash}\r\n                      style={{ color: \"aliceblue\", cursor: \"pointer\" }}\r\n                    />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <Card.Body style={{ border: \"none\", padding: \"0\" }}>\r\n                <LikeDislike\r\n                  id={id}\r\n                  likes={likes}\r\n                  size={false}\r\n                  collection=\"posts\"\r\n                />\r\n              </Card.Body>\r\n              <Card.Text\r\n                style={{ display: \"flex\", padding: \"0\", paddingRight: \"10px\" }}\r\n              >\r\n                Date: {publishDate}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card.Body>\r\n          <Comments id={id} />\r\n        </Card>\r\n      ) : (\r\n        <ReactLoading type=\"spin\" height={150} width={150} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\AllPostsAssign.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js",["192"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"../Profile/Profile.css\";\r\n\r\nconst Profile = ({ user }) => {\r\n  const [clickedUserData, setClickedUserData] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { allUsers, storageRef } = useData();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    allUsers.forEach((x) => {\r\n      if (user === x.userId) {\r\n        storageRef\r\n          .child(x.profilePhoto)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUserPhoto(url);\r\n            if (isMounted) {\r\n              setLoading(true);\r\n            }\r\n          });\r\n        setClickedUserData(x);\r\n      }\r\n    });\r\n    return () => (isMounted.current = false);\r\n  }, [user]);\r\n  const {\r\n    createdAt,\r\n    email,\r\n    profilePhoto,\r\n    userId,\r\n    smallProfilePhoto,\r\n    ...otherData\r\n  } = clickedUserData || {};\r\n\r\n  let joinedAt;\r\n  if (createdAt) {\r\n    joinedAt = createdAt.toDate().toDateString();\r\n  }\r\n  return (\r\n    <Container style={{ marginTop: \"20px\" }}>\r\n      {loading ? (\r\n        <Card bsPrefix=\"Profile\">\r\n          <Col bsPrefix=\"userName\">\r\n            <h3 style={{ margin: \"auto\" }}>\r\n              {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n            </h3>\r\n          </Col>\r\n          <Card.Body bsPrefix=\"user\">\r\n            <a href={userPhoto} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img className=\"profileImage\" src={userPhoto} />\r\n            </a>\r\n            <Container>\r\n              <h5 style={{ textAlign: \"center\" }}>\r\n                About{\" \"}\r\n                {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n              </h5>\r\n              <br />\r\n              <Row style={{ display: \"grid\" }}>\r\n                {Object.entries({ ...otherData }).map(([key, value]) => (\r\n                  <p key={key}>\r\n                    {key}: {value}{\" \"}\r\n                  </p>\r\n                ))}\r\n              </Row>\r\n              <Row style={{ marginLeft: \"auto\", width: \"max-content\" }}>\r\n                {joinedAt ? <>Joined at : {joinedAt.substring(4)}</> : <></>}\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <h1 style={{ color: \"aliceblue\", textAlign: \"center\" }}>...Loading</h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\DeleteUser.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\Observer.js",["193","194"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useObserver = (ref, options) => {\r\n  const [Intersecting, setIntersecting] = useState(false);\r\n\r\n  const observer = new IntersectionObserver(([entry]) => {\r\n    if (!entry.isIntersecting) {\r\n      return;\r\n    }\r\n    setIntersecting(entry.isIntersecting);\r\n    observer.unobserve(entry.target);\r\n  }, options);\r\n\r\n  useEffect(() => {\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return Intersecting;\r\n};\r\nexport default useObserver;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\LikeDislike.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\ChangePassword.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\Comments.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Profile\\AboutMe.js",["195"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faCheck, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nconst AboutMe = ({ value, name }) => {\r\n  const [edit, setEdit] = useState(true);\r\n  const inputValue = useRef(\"\");\r\n  const { updateUserProfile, userData, getUsers } = useData();\r\n  const [data, setData] = useState({ [name]: value });\r\n  const [upload, setUpload] = useState(false);\r\n\r\n  // Here unchanged userData is combined with new userData.\r\n  const x = userData;\r\n  const y = Object.assign(x, data);\r\n\r\n  // If user confirms his edit of data user profile gets updated.\r\n  const updateUser = async () => {\r\n    await updateUserProfile(y);\r\n    setUpload(false);\r\n    if (data.UserName)\r\n      if (userData.UserName !== typeof data.UserName) {\r\n        getUsers();\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload) {\r\n      updateUser();\r\n    }\r\n  }, [upload]);\r\n  const editAboutMe = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const confirmEdit = () => {\r\n    setEdit(true);\r\n    setData({ [name]: inputValue.current.value });\r\n    setUpload(true);\r\n  };\r\n  const cancelEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{ display: \"flex\", marginTop: \"10px\", paddingRight: \"0\" }}\r\n    >\r\n      <div style={{ display: \"flex\" }}>\r\n        {name}:\r\n        {edit ? (\r\n          <div style={{ marginLeft: \"5px\" }}>{value}</div>\r\n        ) : (\r\n          <input style={{ color: \"aliceblue\" }} ref={inputValue} />\r\n        )}\r\n      </div>\r\n      <div style={{ width: \"max-content\" }} className=\"aboutMe-buttonGroup\">\r\n        {edit ? (\r\n          <button className=\"aboutMe-button\" onClick={editAboutMe}>\r\n            <FontAwesomeIcon\r\n              className=\"awesomeAbout\"\r\n              icon={faEdit}\r\n              color=\"aliceblue\"\r\n            />\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <button className=\"aboutMe-button\" onClick={confirmEdit}>\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faCheck}\r\n                color=\"aliceblue\"\r\n              />\r\n            </button>\r\n            <button onClick={cancelEdit} className=\"aboutMe-button\" id=\"onOff1\">\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faBan}\r\n                color=\"aliceblue\"\r\n              />\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Message.js",["196"],"import React, { useState } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nimport \"./Message.css\";\r\nimport UserPhoto from \"../userPhoto\";\r\n\r\nconst Message = ({ messages, user }) => {\r\n  const { userData, allUsers } = useData();\r\n  const { createdAt, message, sender } = messages;\r\n\r\n  const getMessagePhoto = allUsers.filter((u) => u.userId === sender);\r\n\r\n  return (\r\n    <Toast\r\n      style={\r\n        userData.userId === sender\r\n          ? { height: \"max-content\", width: \"400px\", marginLeft: \"auto\" }\r\n          : { height: \"max-content\", width: \"400px\" }\r\n      }\r\n    >\r\n      <Toast.Header>\r\n        {getMessagePhoto ? (\r\n          <UserPhoto\r\n            size=\"30px\"\r\n            userPhoto={getMessagePhoto[0].smallProfilePhoto}\r\n            user={getMessagePhoto[0].userId}\r\n          />\r\n        ) : (\r\n          <div style={{ width: \"30px\", height: \"30px\" }}></div>\r\n        )}\r\n\r\n        <h5 className=\"messageOwner\">\r\n          {userData.userId === sender ? userData.UserName : user.UserName}\r\n        </h5>\r\n        <small className=\"messageTime\">\r\n          {createdAt.toDate().toLocaleTimeString(\"en-US\")}\r\n        </small>\r\n      </Toast.Header>\r\n      <Toast.Body>{message}</Toast.Body>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Comments\\SingleComment.js",["197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport LikeDislike from \"../../LikeDislike\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SingleComment = ({ comment, id }) => {\r\n  const { storageRef, userData, deleteComment, allUsers } = useData();\r\n  const [commentPhoto, setCommentPhoto] = useState();\r\n  const [trashColor, setTrashColor] = useState(\"aliceblue\");\r\n  const history = useHistory();\r\n\r\n  const getProfilePhotos = () => {\r\n    allUsers.map((user) => {\r\n      if (user.userId === comment.userId) {\r\n        storageRef\r\n          .child(user.smallProfilePhoto)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setCommentPhoto(url);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfilePhotos();\r\n  }, []);\r\n\r\n  // When delete comment is clicked it will make it color red and if it clicked again whithin 5seconds\r\n  // it will delete comment, other wise it will turn back to white.\r\n  const mightDeleteComment = async () => {\r\n    if (trashColor === \"red\") {\r\n      await deleteComment(id);\r\n    }\r\n    setTrashColor(\"red\");\r\n    setTimeout(() => {\r\n      setTrashColor(\"aliceblue\");\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <Card.Body style={{ padding: \"0\", minHeight: \"fit-content\" }}>\r\n      <Container style={{ border: \"1px solid rgb(240,248,255,0.2)\" }}>\r\n        <p\r\n          style={{\r\n            fontSize: \"80%\",\r\n            textAlign: \"start\",\r\n            marginBottom: \"8px\",\r\n          }}\r\n        >\r\n          {comment.comment}\r\n        </p>\r\n        <Row style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Row style={{ marginLeft: \"5px\" }}>\r\n            {commentPhoto ? (\r\n              <img\r\n                onClick={() => history.push(`/profile/${comment.userId}`)}\r\n                style={{ cursor: \"pointer\", objectFit: \"cover\" }}\r\n                alt={comment.UserName}\r\n                src={commentPhoto}\r\n                width=\"30px\"\r\n                height=\"30px\"\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <p\r\n              style={{\r\n                fontSize: \"70%\",\r\n                marginLeft: \"5px\",\r\n                marginBottom: \"0\",\r\n                marginTop: \"auto\",\r\n              }}\r\n            >\r\n              {comment.UserName}\r\n            </p>\r\n            {comment.userId === userData.userId ? (\r\n              <FontAwesomeIcon\r\n                onClick={mightDeleteComment}\r\n                icon={faTrash}\r\n                style={{\r\n                  color: trashColor,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"20px\",\r\n                  fontSize: \"70%\",\r\n                  marginTop: \"auto\",\r\n                  marginBottom: \"2px\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Row>\r\n          <div\r\n            style={{\r\n              fontSize: \"70%\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"20px\",\r\n              marginBottom: \"0\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            <LikeDislike\r\n              collection=\"comments\"\r\n              id={id}\r\n              likes={comment.likes}\r\n              size={true}\r\n            />\r\n          </div>\r\n          <p\r\n            style={{\r\n              fontSize: \"70%\",\r\n              textAlign: \"end\",\r\n              marginRight: \"2px\",\r\n              marginBottom: \"0\",\r\n              marginTop: \"auto\",\r\n            }}\r\n          >\r\n            {comment.createdAt.toDate().toLocaleTimeString(\"en-US\")}\r\n          </p>\r\n        </Row>\r\n      </Container>\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default SingleComment;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Mobile\\FriendsDropLeft.js",["199","200"],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Desktop\\DesktopFriends.js",[],"C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\Friend.js",["201"],"import React, { useState } from \"react\";\r\nimport { FireDatabase } from \"../../FirebaseComponents/FirebaseDatabase\";\r\nimport ChatRoom from \"./ChatRoom\";\r\nimport \"./Friend.css\";\r\n\r\nconst Friend = ({ user }) => {\r\n  const { allUsersStatus } = FireDatabase() || {};\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  let isOnline;\r\n  if (allUsersStatus) {\r\n    Object.entries(allUsersStatus).filter((x) => {\r\n      if (x[0] === user.userId) {\r\n        isOnline = x[1].online;\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"friend\">\r\n      <ChatRoom\r\n        user={user}\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n      <h3 onClick={() => setModalShow(true)} className=\"userName\">\r\n        {user.UserName}\r\n      </h3>\r\n      <div\r\n        className={isOnline ? \"online\" : \"offline\"}\r\n        color={isOnline ? \"rgb(3, 182, 3)\" : \"white\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\Friends\\ChatRoom.js",["202","203"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Modal, Form, Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport Message from \"./Message\";\r\nimport \"./ChatRoom.css\";\r\n\r\nconst ChatRoom = ({ onHide, show, user }) => {\r\n  const writtenMessage = useRef();\r\n  const messagesEndRef = useRef(null);\r\n  const [load, setLoad] = useState(false);\r\n  const {\r\n    userData,\r\n    senderMessages,\r\n    recipientMessages,\r\n    writeMessage,\r\n  } = useData();\r\n\r\n  let messages = [];\r\n  if (senderMessages) {\r\n    messages = [...recipientMessages, ...senderMessages];\r\n    messages.sort((a, b) => {\r\n      return a.data().createdAt.seconds - b.data().createdAt.seconds;\r\n    });\r\n  }\r\n  const filteredMessages = messages.filter(\r\n    (m) => m.data().sender === user.userId || m.data().recipient === user.userId\r\n  );\r\n\r\n  const confirmComment = (e) => {\r\n    e.preventDefault();\r\n    if (writtenMessage.current.value.length > 0) {\r\n      writeMessage(writtenMessage.current.value, user.userId);\r\n      e.target.reset();\r\n    }\r\n  };\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({\r\n      inline: \"start\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      scrollToBottom();\r\n    }\r\n  }, [show]);\r\n  return (\r\n    <Modal\r\n      className=\"chatRoom\"\r\n      animation={false}\r\n      show={show}\r\n      onHide={onHide}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <h1>{user.UserName}</h1>\r\n        <h1 style={{ marginLeft: \"auto\" }}>{userData.UserName}</h1>\r\n      </Modal.Header>\r\n      <Modal.Body style={{ overflowY: \"auto\" }}>\r\n        <Container className=\"allMessages\">\r\n          {filteredMessages.map((m) => (\r\n            <Message user={user} key={m.id} messages={m.data()} />\r\n          ))}\r\n          <div style={{ alignSelf: \"end\" }} ref={messagesEndRef} />\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Form className=\"writeChat\" onSubmit={(e) => confirmComment(e)}>\r\n          <button type=\"button\" className=\"chooseButton\" onClick={onHide}>\r\n            Close\r\n          </button>\r\n          <Form.Group style={{ margin: \"0px\" }}>\r\n            <Form.Control\r\n              ref={writtenMessage}\r\n              as=\"textarea\"\r\n              rows={9}\r\n              style={{\r\n                resize: \"none\",\r\n                color: \"rgb(56, 41, 84)\",\r\n                fontSize: \"100%\",\r\n                fontWeight: \"400\",\r\n                backgroundColor: \"aliceblue\",\r\n                height: \"70px\",\r\n                width: \"430px\",\r\n                overflowY: \"auto\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <button className=\"chooseButton\" type=\"submit\">\r\n            Send\r\n          </button>\r\n        </Form>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\SearchBar.js",["204"],"import React, { useState, useEffect } from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"./SearchBar.css\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport FoundUser from \"./foundUser\";\r\n\r\nconst SearchBar = () => {\r\n  const { allUsers, userData, peopleFound } = useData();\r\n  const [findUser, setFindUser] = useState(\"\");\r\n  const { pathname } = useLocation();\r\n\r\n  const excludeOwner =\r\n    allUsers && userData\r\n      ? allUsers.filter((u) => u.userId !== userData.userId)\r\n      : null;\r\n\r\n  const usersFound =\r\n    allUsers && userData\r\n      ? excludeOwner.filter(\r\n          (u) => u.UserName.toLowerCase() === findUser.toLowerCase()\r\n        )\r\n      : null;\r\n  useEffect(() => {\r\n    setFindUser(\"\");\r\n  }, [pathname]);\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <InputGroup\r\n        style={{\r\n          width: \"500px\",\r\n          height: \"60px\",\r\n          marginTop: \"15px\",\r\n          display: \"flex\",\r\n          flexWrap: \"nowrap\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          onChange={(e) => setFindUser(e.target.value)}\r\n          className=\"search-form\"\r\n          style={{\r\n            height: \"60px\",\r\n            backgroundColor: \"rgb(64, 52, 91)\",\r\n            color: \"aliceblue\",\r\n            boxShadow: \"2px 2px aliceblue\",\r\n          }}\r\n          placeholder=\"Search by UserName\"\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n        />\r\n      </InputGroup>\r\n      <div\r\n        style={\r\n          usersFound && usersFound.length > 0\r\n            ? { display: \"block\" }\r\n            : { display: \"none\" }\r\n        }\r\n        className=\"user-list\"\r\n      >\r\n        {usersFound ? (\r\n          usersFound.map((user) => <FoundUser key={user.userId} user={user} />)\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\SearchBar\\foundUser.js",["205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport UserPhoto from \"../userPhoto\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst FoundUser = ({ user }) => {\r\n  const { addFriend, peopleFound } = useData();\r\n  const [currentStatus, setCurrentStatus] = useState(\"Add Friend\");\r\n\r\n  //fix else setStatus\r\n  // if any data is found in peopleFound and coresponds to usersId that was searched for, it will set data in status state.\r\n  useEffect(() => {\r\n    peopleFound.forEach((u) => {\r\n      if (user.userId === u.id) {\r\n        setCurrentStatus(u.data().status);\r\n        if (u.data().status === \"declined\") {\r\n          addFriend(user.userId, \"declined\");\r\n          setCurrentStatus(\"Add Friend\");\r\n        }\r\n      }\r\n    });\r\n  }, [peopleFound]);\r\n\r\n  const changeStatus = () => {\r\n    switch (currentStatus) {\r\n      case \"Add Friend\":\r\n        setCurrentStatus(\"cancel\");\r\n        addFriend(user.userId, \"Add Friend\");\r\n        break;\r\n      case \"cancel\":\r\n        setCurrentStatus(\"Add Friend\");\r\n        addFriend(user.userId, \"cancel\");\r\n        break;\r\n      case \"confirm\":\r\n        setCurrentStatus(\"friends\");\r\n        addFriend(user.userId, \"friends\");\r\n        break;\r\n      case \"friends\":\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"foundUser\">\r\n      <div className=\"foundUser\">\r\n        <UserPhoto size=\"30px\" userPhoto={user.smallProfilePhoto} />\r\n        <h5>{user.UserName}</h5>\r\n      </div>\r\n      <div style={{ width: \"max-content\", marginLeft: \"auto\" }}>\r\n        {currentStatus === \"confirm\" ? (\r\n          <button\r\n            className=\"requestFriend\"\r\n            onClick={() => {\r\n              addFriend(user.userId, \"cancel\");\r\n              setCurrentStatus(\"Add Friend\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <button onClick={changeStatus} className=\"requestFriend\">\r\n          {currentStatus}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FoundUser;\r\n","C:\\Users\\lukas\\Desktop\\programming\\friends\\src\\components\\Content\\userPhoto.js",["207"],"import React, { useEffect, useState } from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useData } from \"../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nconst UserPhoto = ({ user, userPhoto, size }) => {\r\n  const { storageRef } = useData();\r\n  const history = useHistory();\r\n  const [photo, setPhoto] = useState();\r\n\r\n  useEffect(() => {\r\n    storageRef\r\n      .child(userPhoto)\r\n      .getDownloadURL()\r\n      .then((url) => {\r\n        setPhoto(url);\r\n      });\r\n  }, [user]);\r\n  return (\r\n    <Image\r\n      onClick={() =>\r\n        user === undefined ? null : history.push(`/profile/${user}`)\r\n      }\r\n      src={photo}\r\n      roundedCircle\r\n      style={{\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"rgb(79,59,120)\",\r\n        width: size,\r\n        height: size,\r\n        objectFit: \"cover\",\r\n        border: \"1px solid black\",\r\n        boxShadow: \"1px 1px black\",\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default UserPhoto;\r\n",{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"216","severity":1,"message":"217","line":355,"column":9,"nodeType":"218","messageId":"219","endLine":356,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":444,"column":6,"nodeType":"222","endLine":444,"endColumn":19,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":45,"column":6,"nodeType":"222","endLine":45,"endColumn":19,"suggestions":"225"},{"ruleId":"212","severity":1,"message":"226","line":5,"column":3,"nodeType":"214","messageId":"215","endLine":5,"endColumn":8},{"ruleId":"220","severity":1,"message":"227","line":66,"column":6,"nodeType":"222","endLine":66,"endColumn":16,"suggestions":"228"},{"ruleId":"220","severity":1,"message":"229","line":30,"column":6,"nodeType":"222","endLine":30,"endColumn":12,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"231","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"232","line":19,"column":6,"nodeType":"222","endLine":19,"endColumn":8,"suggestions":"233"},{"ruleId":"220","severity":1,"message":"234","line":32,"column":6,"nodeType":"222","endLine":32,"endColumn":14,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"236","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":16,"column":25,"nodeType":"239","messageId":"240","endLine":16,"endColumn":27},{"ruleId":"220","severity":1,"message":"241","line":30,"column":6,"nodeType":"222","endLine":30,"endColumn":8,"suggestions":"242"},{"ruleId":"212","severity":1,"message":"243","line":4,"column":3,"nodeType":"214","messageId":"215","endLine":4,"endColumn":6},{"ruleId":"212","severity":1,"message":"244","line":5,"column":3,"nodeType":"214","messageId":"215","endLine":5,"endColumn":6},{"ruleId":"237","severity":1,"message":"245","line":12,"column":47,"nodeType":"239","messageId":"240","endLine":12,"endColumn":49},{"ruleId":"212","severity":1,"message":"246","line":10,"column":10,"nodeType":"214","messageId":"215","endLine":10,"endColumn":14},{"ruleId":"212","severity":1,"message":"247","line":10,"column":16,"nodeType":"214","messageId":"215","endLine":10,"endColumn":23},{"ruleId":"212","severity":1,"message":"248","line":9,"column":31,"nodeType":"214","messageId":"215","endLine":9,"endColumn":42},{"ruleId":"220","severity":1,"message":"249","line":22,"column":6,"nodeType":"222","endLine":22,"endColumn":19,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":25,"column":5,"nodeType":"253","messageId":"254","endLine":40,"endColumn":6},{"ruleId":"220","severity":1,"message":"255","line":18,"column":6,"nodeType":"222","endLine":18,"endColumn":12,"suggestions":"256"},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'UserProfile', 'findFriends', and 'getMessages'. Either include them or remove the dependency array.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["260"],"'Image' is defined but never used.","React Hook useEffect has missing dependencies: 'params.user', 'pathname', 'postPhoto', and 'storageRef'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'allUsers' and 'storageRef'. Either include them or remove the dependency array.",["262"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'observer' and 'ref'. Either include them or remove the dependency array.",["263"],"React Hook useEffect has a missing dependency: 'updateUser'. Either include it or remove the dependency array.",["264"],"'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getProfilePhotos'. Either include it or remove the dependency array.",["265"],"'Row' is defined but never used.","'Col' is defined but never used.","Array.prototype.filter() expects a return value from arrow function.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'peopleFound' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addFriend' and 'user.userId'. Either include them or remove the dependency array.",["266"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'storageRef' and 'userPhoto'. Either include them or remove the dependency array.",["267"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [UserProfile, currentUser, findFriends, getMessages]",{"range":"286","text":"287"},"Update the dependencies array to be: [currentUser, getData]",{"range":"288","text":"289"},"Update the dependencies array to be: [params.user, pathname, postData, postPhoto, storageRef]",{"range":"290","text":"291"},"Update the dependencies array to be: [allUsers, storageRef, user]",{"range":"292","text":"293"},"Update the dependencies array to be: [observer, ref]",{"range":"294","text":"295"},"Update the dependencies array to be: [updateUser, upload]",{"range":"296","text":"297"},"Update the dependencies array to be: [getProfilePhotos]",{"range":"298","text":"299"},"Update the dependencies array to be: [addFriend, peopleFound, user.userId]",{"range":"300","text":"301"},"Update the dependencies array to be: [storageRef, user, userPhoto]",{"range":"302","text":"303"},[12972,12985],"[UserProfile, currentUser, findFriends, getMessages]",[1188,1201],"[currentUser, getData]",[1966,1976],"[params.user, pathname, postData, postPhoto, storageRef]",[966,972],"[allUsers, storageRef, user]",[495,497],"[observer, ref]",[1090,1098],"[updateUser, upload]",[1038,1040],"[getProfilePhotos]",[806,819],"[addFriend, peopleFound, user.userId]",[534,540],"[storageRef, user, userPhoto]"]