[{"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js":"4","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js":"5","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingOut.js":"6","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingReg.js":"7","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebase.js":"8","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\Register.js":"9","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\ForgotPassword.js":"10","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Header\\header.js":"11","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\Login.js":"12","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\NameAndPhoto.js":"13","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingIn.js":"14","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js":"15","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Posts\\Posts.js":"16","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js":"17","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\ProfilePage.js":"18","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js":"19","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js":"20","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\Profile.js":"21","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\AllPostsAssign.js":"22","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Posts\\post.js":"23","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js":"24","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js":"25","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js":"26","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\DeleteUser.js":"27","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\ChangePassword.js":"28","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\Observer.js":"29","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\AboutMe.js":"30","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Comments\\Comments.js":"31","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Comments\\SingleComment.js":"32","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\LikeDislike.js":"33","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\FriendsDropLeft.js":"34","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\Friend.js":"35","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js":"36","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\ChatRoom.js":"37","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\Message.js":"38"},{"size":1065,"mtime":1616446071474,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1614196043389,"results":"41","hashOfConfig":"40"},{"size":2991,"mtime":1616443995515,"results":"42","hashOfConfig":"40"},{"size":11433,"mtime":1616861516778,"results":"43","hashOfConfig":"40"},{"size":2638,"mtime":1616432456029,"results":"44","hashOfConfig":"40"},{"size":463,"mtime":1614196043375,"results":"45","hashOfConfig":"40"},{"size":473,"mtime":1614196043376,"results":"46","hashOfConfig":"40"},{"size":988,"mtime":1616446203205,"results":"47","hashOfConfig":"40"},{"size":3618,"mtime":1615104972987,"results":"48","hashOfConfig":"40"},{"size":1646,"mtime":1615104972970,"results":"49","hashOfConfig":"40"},{"size":3955,"mtime":1616429079510,"results":"50","hashOfConfig":"40"},{"size":2220,"mtime":1615104972980,"results":"51","hashOfConfig":"40"},{"size":4234,"mtime":1615838448274,"results":"52","hashOfConfig":"40"},{"size":755,"mtime":1615104972968,"results":"53","hashOfConfig":"40"},{"size":758,"mtime":1615104972969,"results":"54","hashOfConfig":"40"},{"size":581,"mtime":1616356552830,"results":"55","hashOfConfig":"40"},{"size":797,"mtime":1616260906602,"results":"56","hashOfConfig":"40"},{"size":1353,"mtime":1616260726405,"results":"57","hashOfConfig":"40"},{"size":3919,"mtime":1616317739978,"results":"58","hashOfConfig":"40"},{"size":2563,"mtime":1616324454012,"results":"59","hashOfConfig":"40"},{"size":6955,"mtime":1616324788855,"results":"60","hashOfConfig":"40"},{"size":773,"mtime":1615750503883,"results":"61","hashOfConfig":"40"},{"size":7086,"mtime":1616327162975,"results":"62","hashOfConfig":"40"},{"size":1335,"mtime":1615104972919,"results":"63","hashOfConfig":"40"},{"size":1587,"mtime":1615104972919,"results":"64","hashOfConfig":"40"},{"size":3118,"mtime":1615104973048,"results":"65","hashOfConfig":"40"},{"size":2936,"mtime":1615104972936,"results":"66","hashOfConfig":"40"},{"size":4336,"mtime":1616957646474,"results":"67","hashOfConfig":"40"},{"size":614,"mtime":1615127701865,"results":"68","hashOfConfig":"40"},{"size":2681,"mtime":1615104973043,"results":"69","hashOfConfig":"40"},{"size":2793,"mtime":1616013558229,"results":"70","hashOfConfig":"40"},{"size":3745,"mtime":1616847197392,"results":"71","hashOfConfig":"40"},{"size":1785,"mtime":1615924818648,"results":"72","hashOfConfig":"40"},{"size":1622,"mtime":1617012281689,"results":"73","hashOfConfig":"40"},{"size":878,"mtime":1617008024114,"results":"74","hashOfConfig":"40"},{"size":1253,"mtime":1616485604450,"results":"75","hashOfConfig":"40"},{"size":2759,"mtime":1617009361406,"results":"76","hashOfConfig":"40"},{"size":1203,"mtime":1617010096731,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1m6b2l8",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\index.js",[],["161","162"],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsFiles.js",["163","164"],"import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { storage, firestore } from \"./firebase\";\r\nimport { useAuth } from \"./firebaseFunctionsAuth\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst FileContext = React.createContext();\r\n\r\nexport const useData = () => {\r\n  return useContext(FileContext);\r\n};\r\n\r\nexport const storageRef = storage.ref();\r\n\r\nconst FirebaseFunctionsFiles = ({ children }) => {\r\n  const { currentUser, deleteUser } = useAuth();\r\n  const [userData, setUserData] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [userPosts, setUserPosts] = useState();\r\n  const newPost = useRef(true);\r\n  const [allUsers, setAllUsers] = useState();\r\n  const [comments, setComments] = useState();\r\n  const [recipientMessages, setRecipientMessages] = useState();\r\n  const [senderMessages, setSenderMessages] = useState();\r\n\r\n  // random id generator for naming post photos.\r\n  const uuidv4 = () => {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n      (\r\n        c ^\r\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n      ).toString(16)\r\n    );\r\n  };\r\n\r\n  const currentTime = new Date();\r\n\r\n  const createUserProfile = (userName) => {\r\n    const { email } = currentUser;\r\n    const profilePhoto = storage.ref(\r\n      `${currentUser.uid}/profilePhoto/profilePic`\r\n    ).fullPath;\r\n\r\n    return firestore.collection(\"users\").doc(`${currentUser.uid}`).set({\r\n      email: email,\r\n      createdAt: currentTime,\r\n      profilePhoto: profilePhoto,\r\n      UserName: userName,\r\n      Name: \"Name\",\r\n      Hobby: \"Hobby\",\r\n      Age: \"Age\",\r\n      Country: \"Country\",\r\n      Job: \"Job\",\r\n    });\r\n  };\r\n\r\n  const updateUserProfile = (y) => {\r\n    const { Age, Hobby, UserName, Job, Country, Name } = y;\r\n    return firestore.collection(\"users\").doc(`${currentUser.uid}`).update({\r\n      UserName: UserName,\r\n      Hobby: Hobby,\r\n      Name: Name,\r\n      Age: Age,\r\n      Country: Country,\r\n      Job: Job,\r\n    });\r\n  };\r\n  // For adding and updating user profile photo.\r\n  const createUserProfilePhoto = (\r\n    profilePhoto,\r\n    newProfilePhoto,\r\n    commentPhoto\r\n  ) => {\r\n    if (newProfilePhoto) {\r\n      // if user puts new profile photo, newProfilePhoto is used until rerender.\r\n      setUserPhoto(newProfilePhoto);\r\n    }\r\n    storageRef\r\n      .child(`${currentUser.uid}/commentPhoto/commentPic`)\r\n      .put(commentPhoto);\r\n    // not converted profilePhoto file is sent to storage and will be used as profilePhoto after render.\r\n    // And getUsers are run to update everything with new profile photo.\r\n    return storageRef\r\n      .child(`${currentUser.uid}/profilePhoto/profilePic`)\r\n      .put(profilePhoto)\r\n      .on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          if (progress === 100) {\r\n            getUsers();\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error, \"error at uploading user photo\");\r\n        }\r\n      );\r\n  };\r\n  // Getting data of currently logged in user.\r\n  const UserProfile = async () => {\r\n    if (currentUser) {\r\n      try {\r\n        const docRef = await firestore.collection(\"users\").doc(currentUser.uid);\r\n        docRef.onSnapshot((doc) => {\r\n          if (doc && doc.exists) {\r\n            const x = Object.assign(doc.data(), { userId: doc.id });\r\n            setUserData(x);\r\n            setTimeout(() => {\r\n              storageRef\r\n                .child(`${currentUser.uid}/profilePhoto/profilePic`)\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  setUserPhoto(url);\r\n                });\r\n            }, 500);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Getting all existing users.\r\n  const getUsers = async () => {\r\n    const y = [];\r\n    return await firestore.collection(\"users\").onSnapshot((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        const x = Object.assign(doc.data(), { userId: doc.id });\r\n        y.push(x);\r\n      });\r\n      const filterY = y.filter(\r\n        (v, i, a) =>\r\n          a.findIndex(\r\n            (t) => JSON.stringify(t.userId) === JSON.stringify(v.userId)\r\n          ) === i\r\n      );\r\n      setAllUsers(filterY);\r\n    });\r\n  };\r\n  // Getting all posts.\r\n  const retrievePosts = async () => {\r\n    if (newPost) {\r\n      await firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n        setUserPosts(querySnapshot.docs);\r\n      });\r\n    }\r\n  };\r\n\r\n  // used to create text post.\r\n  const createPostT = (postText) => {\r\n    if (postText) {\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used to create photo post, using chosen photo from users device.\r\n  const createPostP = (postText, photoFile, y) => {\r\n    if (photoFile) {\r\n      const x = storage.ref(\r\n        `${currentUser.uid}/PostPhotos/${y}${photoFile.name}`\r\n      ).fullPath;\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        randomKey: y,\r\n        postPhoto: x,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used to create video post, using youtube or soundcloud url.\r\n  const createPostV = (postText, sendUrl) => {\r\n    if (sendUrl) {\r\n      newPost.current = true;\r\n      return firestore.collection(\"posts\").doc().set({\r\n        aboutPost: postText,\r\n        video: sendUrl,\r\n        likes: 0,\r\n        createdAt: currentTime,\r\n        userId: currentUser.uid,\r\n      });\r\n    }\r\n  };\r\n  // used for putting users post photos in storage and once that is done,\r\n  //  it runs function that creates new user photo post.\r\n  const uploadPostPhoto = (postText, photoFile) => {\r\n    const y = uuidv4();\r\n    return storageRef\r\n      .child(`${currentUser.uid}/PostPhotos/${y}${photoFile.name}`)\r\n      .put(photoFile)\r\n      .on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          if (progress === 100) {\r\n            setTimeout(() => {\r\n              createPostP(postText, photoFile, y);\r\n              newPost.current = true;\r\n            }, 500);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error, \"error at uploading post photo\");\r\n        }\r\n      );\r\n  };\r\n\r\n  const getLikeDislike = (like, postId, collection) => {\r\n    return firestore.collection(collection).doc(postId).update({\r\n      likes: like,\r\n    });\r\n  };\r\n  // Getting all Comments.\r\n  const retrieveComments = async () => {\r\n    await firestore\r\n      .collection(\"comments\")\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setComments(querySnapshot.docs.reverse());\r\n      });\r\n  };\r\n\r\n  const createComment = (commentText, postId) => {\r\n    const x = storage.ref(`${currentUser.uid}/commentPhoto/commentPic`)\r\n      .fullPath;\r\n    return firestore.collection(\"comments\").doc().set({\r\n      UserName: userData.UserName,\r\n      userPhoto: x,\r\n      comment: commentText,\r\n      likes: 0,\r\n      createdAt: currentTime,\r\n      userId: currentUser.uid,\r\n      postId: postId,\r\n    });\r\n  };\r\n\r\n  const getMessages = async () => {\r\n    await firestore\r\n      .collection(\"messages\")\r\n      .where(\"recipient\", \"==\", currentUser.uid)\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setRecipientMessages(querySnapshot.docs);\r\n      });\r\n    await firestore\r\n      .collection(\"messages\")\r\n      .where(\"sender\", \"==\", currentUser.uid)\r\n      .orderBy(\"createdAt\")\r\n      .onSnapshot((querySnapshot) => {\r\n        setSenderMessages(querySnapshot.docs);\r\n      });\r\n  };\r\n\r\n  const writeMessage = (message, recipient) => {\r\n    const x = storage.ref(`${currentUser.uid}/commentPhoto/commentPic`)\r\n      .fullPath;\r\n    return firestore.collection(\"messages\").doc().set({\r\n      userPhoto: x,\r\n      message: message,\r\n      createdAt: currentTime,\r\n      sender: currentUser.uid,\r\n      recipient: recipient,\r\n    });\r\n  };\r\n\r\n  const deleteComment = async (commentId) => {\r\n    await firestore.collection(\"comments\").doc(commentId).delete();\r\n  };\r\n  // delete post and run retrievePosts to update what user sees.\r\n  // every comment that has postId of post that is being deleted will get deleted as well.\r\n  const deletePost = async (postId, postPhoto) => {\r\n    await firestore.collection(\"posts\").doc(postId).delete();\r\n    firestore\r\n      .collection(\"comments\")\r\n      .where(\"postId\", \"==\", postId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deleteComment(doc.id);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    if (postPhoto) {\r\n      storageRef.child(postPhoto).delete();\r\n    }\r\n  };\r\n  // hapens when user does byeBye :(\r\n  const deleteUserData = () => {\r\n    firestore\r\n      .collection(\"comments\")\r\n      .where(\"userId\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deleteComment(doc.id);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    firestore\r\n      .collection(\"posts\")\r\n      .where(\"userId\", \"==\", currentUser.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          deletePost(doc.id, doc.data().postPhoto);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n      .then(() => {\r\n        storageRef.child(`${currentUser.uid}/profilePhoto/profilePic`).delete();\r\n      })\r\n      .catch((error) => console.log(error))\r\n      .then(() => {\r\n        firestore.collection(\"users\").doc(currentUser.uid).delete();\r\n        setTimeout(() => {\r\n          deleteUser();\r\n        }, 1000);\r\n      })\r\n      .catch((error) => console.log(error));\r\n    setUserData();\r\n    setUserPhoto();\r\n  };\r\n  // Every time new post is created use Effect updates posts, that are shown.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      if (newPost) {\r\n        retrievePosts();\r\n      }\r\n    }\r\n    return () => (newPost.current = false);\r\n  }, [newPost, currentUser]);\r\n  // get all users data.\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      getUsers();\r\n      UserProfile();\r\n      retrieveComments();\r\n      getMessages();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // functions and data for exporting.\r\n  const functions = {\r\n    // functions\r\n    createUserProfilePhoto,\r\n    createUserProfile,\r\n    UserProfile,\r\n    updateUserProfile,\r\n    uploadPostPhoto,\r\n    createPostT,\r\n    createPostV,\r\n    getLikeDislike,\r\n    deletePost,\r\n    getUsers,\r\n    deleteUserData,\r\n    createComment,\r\n    deleteComment,\r\n    writeMessage,\r\n    // functions\r\n    // data\r\n    userData,\r\n    userPhoto,\r\n    userPosts,\r\n    storageRef,\r\n    allUsers,\r\n    comments,\r\n    senderMessages,\r\n    recipientMessages,\r\n    // data\r\n  };\r\n  return (\r\n    <FileContext.Provider value={functions}>{children}</FileContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FirebaseFunctionsFiles;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebaseFunctionsAuth.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingOut.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingReg.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\firebase.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\Register.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\ForgotPassword.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Header\\header.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\Login.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\UserAuth\\NameAndPhoto.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingIn.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Routing\\PrivateRoutingUserData.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Posts\\Posts.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\PostProfile\\PostProfilePage.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\ProfilePage.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\CreatePost.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\PostProfile\\PostProfile.js",["165"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, Col, Row, Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport \"../Profile/Profile.css\";\r\n\r\nconst Profile = ({ user }) => {\r\n  const [clickedUserData, setClickedUserData] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { allUsers, storageRef } = useData();\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    allUsers.forEach((x) => {\r\n      if (user === x.userId) {\r\n        storageRef\r\n          .child(x.profilePhoto)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUserPhoto(url);\r\n            if (isMounted) {\r\n              setLoading(true);\r\n            }\r\n          });\r\n        setClickedUserData(x);\r\n      }\r\n    });\r\n    return () => (isMounted.current = false);\r\n  }, [user]);\r\n  const { createdAt, email, profilePhoto, userId, ...otherData } =\r\n    clickedUserData || {};\r\n\r\n  let joinedAt;\r\n  if (createdAt) {\r\n    joinedAt = createdAt.toDate().toDateString();\r\n  }\r\n  return (\r\n    <Container style={{ marginTop: \"20px\" }}>\r\n      {loading ? (\r\n        <Card bsPrefix=\"Profile\">\r\n          <Col bsPrefix=\"userName\">\r\n            <h3 style={{ margin: \"auto\" }}>\r\n              {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n            </h3>\r\n          </Col>\r\n          <Card.Body bsPrefix=\"user\">\r\n            <a href={userPhoto} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img className=\"profileImage\" src={userPhoto} />\r\n            </a>\r\n            <Container>\r\n              <h5 style={{ textAlign: \"center\" }}>\r\n                About{\" \"}\r\n                {clickedUserData ? clickedUserData.UserName : \"Profile Name\"}\r\n              </h5>\r\n              <br />\r\n              <Row style={{ display: \"grid\" }}>\r\n                {Object.entries({ ...otherData }).map(([key, value]) => (\r\n                  <p key={key}>\r\n                    {key}: {value}{\" \"}\r\n                  </p>\r\n                ))}\r\n              </Row>\r\n              <Row style={{ marginLeft: \"auto\", width: \"max-content\" }}>\r\n                {joinedAt ? <>Joined at : {joinedAt.substring(4)}</> : <></>}\r\n              </Row>\r\n            </Container>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <h1 style={{ color: \"aliceblue\", textAlign: \"center\" }}>...Loading</h1>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\Profile.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\AllPostsAssign.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Posts\\post.js",["166"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport LikeDislike from \"../../LikeDislike\";\r\nimport {\r\n  Card,\r\n  Image,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Row,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\nimport { useAuth } from \"../../FirebaseComponents/firebaseFunctionsAuth\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport useObserver from \"../../../Observer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Comments from \"../Comments/Comments\";\r\n\r\nconst Post = ({ postData }) => {\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const params = useParams();\r\n  const ref = useRef();\r\n  const { currentUser } = useAuth();\r\n  const [postImage, setPostImage] = useState();\r\n  const [userPhoto, setUserPhoto] = useState();\r\n  const [hidePopup, setHidePopup] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [show, setShow] = useState(true);\r\n  const { storageRef, deletePost } = useData();\r\n  const onScreen = useObserver(ref);\r\n\r\n  const { postPhoto, aboutPost, createdAt, video, user, likes, id } = postData;\r\n\r\n  const publishDate = createdAt.toDate().toDateString().substring(4);\r\n  if (onScreen) {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n    }, 1000);\r\n  } else {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (postPhoto) {\r\n      storageRef\r\n        .child(postPhoto)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setPostImage(url);\r\n        });\r\n    }\r\n    if (pathname === \"/profile\" || pathname === `/profile/${params.user}`) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n    }\r\n  }, [postData]);\r\n\r\n  storageRef\r\n    .child(user.profilePhoto)\r\n    .getDownloadURL()\r\n    .then((url) => {\r\n      setUserPhoto(url);\r\n    });\r\n\r\n  const deletePostClick = () => {\r\n    deletePost(id, postPhoto);\r\n    setHidePopup(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      {loading ? (\r\n        <Card\r\n          className=\"text-center\"\r\n          style={{\r\n            width: \"770px\",\r\n            minWidth: \"400px\",\r\n            marginTop: \"20px\",\r\n            color: \"aliceblue\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {show ? (\r\n            <Card.Title style={{ margin: \"0\", display: \"flex\" }}>\r\n              <Image\r\n                onClick={() => history.push(`/profile/${user.userId}`)}\r\n                src={userPhoto}\r\n                roundedCircle\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  backgroundColor: \"rgb(79,59,120)\",\r\n                  width: \"60px\",\r\n                  height: \"60px\",\r\n                  objectFit: \"cover\",\r\n                  border: \"1px solid aliceblue\",\r\n                  boxShadow: \"2px 2px aliceblue\",\r\n                }}\r\n              />\r\n              <h5 style={{ margin: \"auto\", paddingRight: \"60px\" }}>\r\n                Posted by {user.UserName}\r\n              </h5>\r\n            </Card.Title>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {postImage ? (\r\n            <a href={postImage} target=\"_blank\" rel=\"noreferrer\">\r\n              <Card.Img\r\n                style={{\r\n                  maxHeight: \"600px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n                variant=\"top\"\r\n                src={postImage}\r\n              />\r\n            </a>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {video ? (\r\n            <ReactPlayer controls={true} width=\"768px\" url={video} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Card.Body style={{ padding: \"0\" }}>\r\n            <Card.Title style={{ marginTop: \"20px\" }}>{aboutPost}</Card.Title>\r\n            <Card.Body\r\n              style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"repeat(3, auto)\",\r\n                padding: \"0\",\r\n                marginTop: \"70px\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {currentUser.uid === user.userId ? (\r\n                <OverlayTrigger\r\n                  show={hidePopup}\r\n                  trigger=\"click\"\r\n                  key=\"right\"\r\n                  placement=\"right\"\r\n                  overlay={\r\n                    <Popover id={\"popover-positioned-right\"}>\r\n                      <Popover.Title\r\n                        style={{ fontSize: \"large\", color: \"rgb(79, 59, 120)\" }}\r\n                        as=\"h3\"\r\n                      >\r\n                        Delete this post?\r\n                      </Popover.Title>\r\n                      <Popover.Content>\r\n                        <Row\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={() => setHidePopup(false)}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            bsPrefix=\"chooseButton\"\r\n                            onClick={deletePostClick}\r\n                          >\r\n                            Confirm\r\n                          </Button>\r\n                        </Row>\r\n                      </Popover.Content>\r\n                    </Popover>\r\n                  }\r\n                >\r\n                  <button\r\n                    style={{\r\n                      backgroundColor: \"rgb(33, 27, 28)\",\r\n                      border: \"none\",\r\n                      cursor: \"default\",\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      onClick={() => setHidePopup(true)}\r\n                      icon={faTrash}\r\n                      style={{ color: \"aliceblue\", cursor: \"pointer\" }}\r\n                    />\r\n                  </button>\r\n                </OverlayTrigger>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <Card.Body style={{ border: \"none\", padding: \"0\" }}>\r\n                <LikeDislike\r\n                  id={id}\r\n                  likes={likes}\r\n                  size={false}\r\n                  collection=\"posts\"\r\n                />\r\n              </Card.Body>\r\n              <Card.Text\r\n                style={{ display: \"flex\", padding: \"0\", paddingRight: \"10px\" }}\r\n              >\r\n                Date: {publishDate}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card.Body>\r\n          <Comments userPhoto={userPhoto} id={id} />\r\n        </Card>\r\n      ) : (\r\n        <ReactLoading type=\"spin\" height={150} width={150} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\chooseTextPost.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\choosePicturePost.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\CreatePost\\chooseYoutube.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\DeleteUser.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\ChangePassword.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\Observer.js",["167","168"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useObserver = (ref) => {\r\n  const [Intersecting, setIntersecting] = useState(false);\r\n\r\n  const options = {\r\n    rootMargin: \"0px 0px 500px\",\r\n  };\r\n\r\n  const observer = new IntersectionObserver(([entry]) => {\r\n    if (!entry.isIntersecting) {\r\n      return;\r\n    }\r\n    setIntersecting(entry.isIntersecting);\r\n    observer.unobserve(entry.target);\r\n  }, options);\r\n\r\n  useEffect(() => {\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return Intersecting;\r\n};\r\nexport default useObserver;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Profile\\AboutMe.js",["169"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faCheck, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useData } from \"../../FirebaseComponents/firebaseFunctionsFiles\";\r\n\r\nconst AboutMe = ({ value, name }) => {\r\n  const [edit, setEdit] = useState(true);\r\n  const inputValue = useRef(\"\");\r\n  const { updateUserProfile, userData, getUsers } = useData();\r\n  const [data, setData] = useState({ [name]: value });\r\n  const [upload, setUpload] = useState(false);\r\n\r\n  // Here unchanged userData is combined with new userData.\r\n  const x = userData;\r\n  const y = Object.assign(x, data);\r\n\r\n  // If user confirms his edit of data user profile gets updated.\r\n  const updateUser = async () => {\r\n    await updateUserProfile(y);\r\n    setUpload(false);\r\n    if (data.UserName)\r\n      if (userData.UserName !== typeof data.UserName) {\r\n        getUsers();\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (upload) {\r\n      updateUser();\r\n    }\r\n  }, [upload]);\r\n  const editAboutMe = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const confirmEdit = () => {\r\n    setEdit(true);\r\n    setData({ [name]: inputValue.current.value });\r\n    setUpload(true);\r\n  };\r\n  const cancelEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      style={{ display: \"flex\", marginTop: \"10px\", paddingRight: \"0\" }}\r\n    >\r\n      <div style={{ display: \"flex\" }}>\r\n        {name}:\r\n        {edit ? (\r\n          <div style={{ marginLeft: \"5px\" }}>{value}</div>\r\n        ) : (\r\n          <input style={{ color: \"aliceblue\" }} ref={inputValue} />\r\n        )}\r\n      </div>\r\n      <div style={{ width: \"max-content\" }} className=\"aboutMe-buttonGroup\">\r\n        {edit ? (\r\n          <button className=\"aboutMe-button\" onClick={editAboutMe}>\r\n            <FontAwesomeIcon\r\n              className=\"awesomeAbout\"\r\n              icon={faEdit}\r\n              color=\"aliceblue\"\r\n            />\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <button className=\"aboutMe-button\" onClick={confirmEdit}>\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faCheck}\r\n                color=\"aliceblue\"\r\n              />\r\n            </button>\r\n            <button onClick={cancelEdit} className=\"aboutMe-button\" id=\"onOff1\">\r\n              <FontAwesomeIcon\r\n                className=\"awesomeAbout\"\r\n                icon={faBan}\r\n                color=\"aliceblue\"\r\n              />\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AboutMe;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Comments\\Comments.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Comments\\SingleComment.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\LikeDislike.js",[],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\FriendsDropLeft.js",["170","171"],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\Friend.js",["172"],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\FirebaseComponents\\FirebaseDatabase.js",["173"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./firebaseFunctionsAuth\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst FileContext = React.createContext();\r\n\r\nexport const FireDatabase = () => {\r\n  return useContext(FileContext);\r\n};\r\n\r\nconst FirebaseDatabase = ({ children }) => {\r\n  const [allUsersStatus, setAllUsersStatus] = useState();\r\n  const { currentUser } = useAuth();\r\n  const userOffline = () => {\r\n    return firebase\r\n      .database()\r\n      .ref(`users/${currentUser.uid}`)\r\n      .onDisconnect()\r\n      .set({\r\n        online: false,\r\n      });\r\n  };\r\n  const userOnline = () => {\r\n    return firebase.database().ref(`users/${currentUser.uid}`).set({\r\n      online: true,\r\n    });\r\n  };\r\n  const getData = () => {\r\n    const dataRef = firebase.database().ref(\"users\");\r\n    dataRef.on(\"value\", (snapshot) => {\r\n      setAllUsersStatus(snapshot.val());\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      getData();\r\n      userOffline();\r\n      userOnline();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const functions = {\r\n    allUsersStatus,\r\n  };\r\n  return (\r\n    <FileContext.Provider value={functions}>{children}</FileContext.Provider>\r\n  );\r\n};\r\nexport default FirebaseDatabase;\r\n","C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\ChatRoom.js",["174"],"C:\\Users\\DELL\\Desktop\\programing\\friends\\src\\components\\Content\\Friends\\Message.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":357,"column":6,"nodeType":"185","endLine":357,"endColumn":19,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":30,"column":6,"nodeType":"185","endLine":30,"endColumn":12,"suggestions":"188"},{"ruleId":"183","severity":1,"message":"189","line":62,"column":6,"nodeType":"185","endLine":62,"endColumn":16,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"191","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"192","line":23,"column":6,"nodeType":"185","endLine":23,"endColumn":8,"suggestions":"193"},{"ruleId":"183","severity":1,"message":"194","line":32,"column":6,"nodeType":"185","endLine":32,"endColumn":14,"suggestions":"195"},{"ruleId":"179","severity":1,"message":"196","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":4,"endColumn":6},{"ruleId":"179","severity":1,"message":"197","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":6},{"ruleId":"198","severity":1,"message":"199","line":10,"column":45,"nodeType":"200","messageId":"201","endLine":10,"endColumn":47},{"ruleId":"183","severity":1,"message":"202","line":41,"column":6,"nodeType":"185","endLine":41,"endColumn":19,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"204","line":16,"column":9,"nodeType":"205","endLine":16,"endColumn":61},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'UserProfile' and 'getMessages'. Either include them or remove the dependency array.","ArrayExpression",["208"],"React Hook useEffect has missing dependencies: 'allUsers' and 'storageRef'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'params.user', 'pathname', 'postPhoto', and 'storageRef'. Either include them or remove the dependency array.",["210"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'observer' and 'ref'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has a missing dependency: 'updateUser'. Either include it or remove the dependency array.",["212"],"'Row' is defined but never used.","'Col' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'userOffline' and 'userOnline'. Either include them or remove the dependency array.",["213"],"The 'messages' array makes the dependencies of useEffect Hook (at line 38) change on every render. To fix this, wrap the initialization of 'messages' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [UserProfile, currentUser, getMessages]",{"range":"226","text":"227"},"Update the dependencies array to be: [allUsers, storageRef, user]",{"range":"228","text":"229"},"Update the dependencies array to be: [params.user, pathname, postData, postPhoto, storageRef]",{"range":"230","text":"231"},"Update the dependencies array to be: [observer, ref]",{"range":"232","text":"233"},"Update the dependencies array to be: [updateUser, upload]",{"range":"234","text":"235"},"Update the dependencies array to be: [currentUser, userOffline, userOnline]",{"range":"236","text":"237"},[10715,10728],"[UserProfile, currentUser, getMessages]",[966,972],"[allUsers, storageRef, user]",[1938,1948],"[params.user, pathname, postData, postPhoto, storageRef]",[549,551],"[observer, ref]",[1090,1098],"[updateUser, upload]",[1049,1062],"[currentUser, userOffline, userOnline]"]